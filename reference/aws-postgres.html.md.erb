---
title: Amazon RDS for PostgreSQL
owner: Cloud Service Broker
---

<strong><%= modified_date %></strong>

This topic gives you reference information about the
[Amazon RDS for PostgreSQL](https://aws.amazon.com/rds/postgresql/) (csb-aws-postgresql)
service. It details the plan and service instance configuration parameters, and binding credentials.

## <a id="plans-config"></a> Plan Configuration Parameters

When configuring <%= vars.product_short %> you can add additional plans.
For instructions on how to configure plans, see
[Configure Services with Cloud Service Broker for AWS](../installing-with-aws.html#services).

The following table lists parameters which can only be configured for additional plans:

| Parameter Name            | Description                                                                                                              | Default | Required |
|---------------------------|--------------------------------------------------------------------------------------------------------------------------|---------|----------|
| `name`                    | The plan name.                                                                                                           | _n/a_   | Yes      |
| `id`                      | A unique GUID.                                                                                                           | _n/a_   | Yes      |
| `description`             | Description of the new plan.                                                                                             | _n/a_   | Yes      |
| `free`                    | When false, service instances of this service plan have a cost.                                                          | true    | No       |
| `bindable`                | Specifies whether service instances of the service plan can bind to applications.                                        | true    | No       |
| `plan_updateable`         | Whether the plan supports upgrading, downgrading, or sidegrading to another version.                                     | true    | No       |
| `postgres_version`        | The version for the PostgreSQL instance. Can be any supported major or minor version. PostgreSQL 15 is not supported.    | _n/a_   | Yes      |
| `storage_gb`              | This is storage volume size for service instance, which is 5&ndash;4096&nbsp;GB.                                         | _n/a_   | Yes      |
| `cores`                   | Deprecated - Minimum number of cores for the service instance. 2&ndash;64, multiples of 2. Use `instance_class` instead. | _n/a_   | No       |
| `metadata.displayName`    | Name to use when displaying the plan in the Marketplace.                                                                 | _n/a_   | No       |
| `metadata.bullets`        | List of bullet points to display in Apps Manager.                                                                        | _n/a_   | No       |


You can also add any of the parameters listed in the [Configuration Parameters](#parameters) section
to your plan.

To create plans with specific size and versions, set `instance_class`, `storage_gb`, and `postgres_version`
properties.

<p class="note">
  <strong>Note:</strong> If you set a parameter at plan level, developers cannot
  change the value when creating or updating service instances.
</p>

## <a id="parameters"></a> Configuration Parameters

You can provision a service by running:

```console
cf create-service csb-aws-postgres PLAN-NAME SERVICE-INSTANCE-NAME -c '{"PARAMETER-NAME": "PARAMETER-VALUE"}
```

You can update the configuration parameters for a service instance by running:

```console
cf update-service SERVICE-INSTANCE-NAME -c '{"PARAMETER-NAME": "PARAMETER-VALUE"}'
```


>**Important**
>When creating an object within a `csb-aws-postgres` service instance, you must first assign the groupâ€™s role with `SET ROLE binding_user_group`. For more information about this issue with object ownership,
see the [Troubleshooting page](../troubleshooting.html.md.erb#postgres-binding-issue).


The following table lists the parameters that you can configure, by using the `-c` flag, when
provisioning or updating a `csb-aws-postgres` service.
The Operation column displays whether a parameter is supported for both provision and update, or for
provision only:

<table class="nice">
  <thead>
    <tr>
      <th width="20%">Parameter Name</th>
      <th width="10%">Type</th>
      <th width="40%">Description</th>
      <th width="20%">Default</th>
      <th width="10%">Operation</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code>instance_class</code></td>
      <td>String</td>
      <td>
        Required unless cores is defined in plan - the AWS database instance class.
        For more information about database instance classes, see the
        <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html">AWS documentation</a>.
      </td>
      <td><code>""</code></td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>storage_type</code></td>
      <td>String</td>
      <td>
        Type of storage to be used.
        One of <code>standard</code> (magnetic), <code>gp2</code> (general purpose SSD), <code>gp3</code>
        (general purpose SSD), or <code>io1</code> (provisioned IOPS SSD).
      </td>
      <td><code>io1</code></td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>iops</code></td>
      <td>Integer</td>
      <td>
        The amount of provisioned IOPS. For this property to take effect, <code>storage_type</code>
        must be set to <code>io1</code> or <code>gp3</code>.
        Cannot be specified for <code>gp3</code> storage if the <code>storage_gb</code> value is below a per-engine threshold.
        For more information, see the
        <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Storage.html#gp3-storage">Amazon RDS User Guide</a>.
      </td>
      <td><code>3000</code></td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>instance_name</code></td>
      <td>String</td>
      <td>The name of the AWS instance to create.</td>
      <td><code>csb-postgresql-INSTANCE-ID</code></td>
      <td>provision</td>
    </tr>
    <tr>
      <td><code>db_name</code></td>
      <td>String</td>
      <td>Name for the database to create</td>
      <td><code>vsbdb</code></td>
      <td>provision</td>
    </tr>
    <tr>
      <td><code>region</code></td>
      <td>String</td>
      <td>
        The AWS region and availability zone (AZ) in which to deploy the service. For more information about available regions,
        see the <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html#concepts-available-regions">AWS documentation</a>.
      </td>
      <td><code>us-west-2</code></td>
      <td>provision</td>
    </tr>
    <tr>
      <td><code>multi_az</code></td>
      <td>Boolean</td>
      <td>
        If <code>true</code>, create a Multi-AZ (HA) instance.
        For more information about Multi-AZ deployments, see the
        <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.MultiAZ.html">AWS documentation</a>.
      </td>
      <td><code>false</code></td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>publicly_accessible</code></td>
      <td>Boolean</td>
      <td>If <code>true</code>, make instance available to public connections.</td>
      <td><code>false</code></td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>allow_major_version_upgrade</code></td>
      <td>Boolean</td>
      <td>
        Indicates that major version upgrades are allowed.
        Changing this parameter does not result in an outage and the change is
        asynchronously applied as soon as possible.
      </td>
      <td><code>true</code></td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>auto_minor_version_upgrade</code></td>
      <td>Boolean</td>
      <td>
        Indicates that minor engine upgrades are applied automatically
        to the database instance during the maintenance window
      </td>
      <td><code>true</code></td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>maintenance_day</code></td>
      <td>String</td>
      <td>
        The preferred maintenance day: <code>Sun</code>, <code>Mon</code>, <code>Tue</code>, <code>Wed</code>, <code>Thu</code>, <code>Fri</code>, or <code>Sat</code>.
        It can only be updated to a non-null value.
      </td>
      <td>Uses AWS default value for the region if all <code>maintenance_*</code> properties are null when creating the instance</td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>maintenance_start_hour</code></td>
      <td>String</td>
      <td>
        The preferred maintenance start hour. Valid values are <code>00</code> through <code>23</code>.
        It can only be updated to a non-null value.
      </td>
      <td>Uses AWS default value for the region if all <code>maintenance_*</code> properties are null when creating the instance</td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>maintenance_start_min</code></td>
      <td>String</td>
      <td>
        The preferred maintenance start minute. Valid values are <code>00</code>, <code>15</code>, <code>30</code>, <code>45</code>.
        It can only be updated to a non-null value.
      </td>
      <td>Uses AWS default value for the region if all <code>maintenance_*</code> properties are null when creating the instance</td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>maintenance_end_hour</code></td>
      <td>String</td>
      <td>
        The preferred maintenance end hour. Valid values are <code>00</code> through <code>23</code>.
        It can only be updated to a non-null value.
      </td>
      <td>Uses AWS default value for the region if all <code>maintenance_*</code> properties are null when creating the instance</td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>maintenance_end_min</code></td>
      <td>String</td>
      <td>
        The preferred maintenance end minute. Valid values are <code>00</code>, <code>15</code>, <code>30</code>, <code>45</code>.
        It can only be updated to a non-null value.
      </td>
      <td>Uses AWS default value for the region if all <code>maintenance_*</code> properties are null when creating the instance</td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>backup_retention_period</code></td>
      <td>Integer</td>
      <td>
        The number of days for which automatic backups are kept.
        Set the value to 0 to deactivate automated backups. An outage
        occurs if you change the backup retention period from 0 to
        a nonzero value or the reverse. This applies to both Single-AZ
        and Multi-AZ database instances.
      </td>
      <td><code>7</code></td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>backup_window</code></td>
      <td>String</td>
      <td>
        The daily time range in UTC during which automated backups are created.
        For example, <code>09:46-10:16</code>. It must not overlap with the maintenance window.
        It can only be updated to a non-null value.
        For more information, see
        the <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_WorkingWithAutomatedBackups.html#USER_WorkingWithAutomatedBackups.BackupWindow">AWS documentation</a>.
      </td>
      <td>Uses AWS default value for the region</td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>delete_automated_backups</code></td>
      <td>Boolean</td>
      <td>Specifies whether to remove automated backups immediately after the database instance is deleted</td>
      <td><code>true</code></td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>copy_tags_to_snapshot</code></td>
      <td>Boolean</td>
      <td>Copy all instance tags to snapshots</td>
      <td><code>true</code></td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>storage_encrypted</code></td>
      <td>Boolean</td>
      <td>If <code>true</code>, database storage is encrypted</td>
      <td><code>false</code></td>
      <td>provision</td>
    </tr>
    <tr>
      <td><code>kms_key_id</code></td>
      <td>String</td>
      <td>
        The <strong>ARN</strong> for the KMS encryption key.
        Enable the <code>storage_encrypted</code> property if the key is specified.
        Use the <strong>ARN</strong> in this field, not the <strong>ID</strong>
        as the name might suggest.<br><br>
        Amazon RDS-encrypted database instances provide an additional layer of data protection by
        securing data from unauthorized access to the underlying storage.<br><br>
        Amazon RDS uses an AWS KMS key to encrypt these resources. You can use a custom key with the
        configuration that you want.
      </td>
      <td><code>""</code></td>
      <td>provision</td>
    </tr>
    <tr>
      <td><code>parameter_group_name</code></td>
      <td>String</td>
      <td>
        The PostgreSQL parameter group name for the service instance.
        By default, a parameter group is created for each instance, and used to apply security settings.
        If you set a custom parameter group, it might override other settings, including security settings.<br><br>
        Do not introduce this property during a service instance update because it causes the update to fail.
        However, you can edit or unset an existing value during a service instance update.
      </td>
      <td><code>""</code></td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>deletion_protection</code></td>
      <td>Boolean</td>
      <td>Whether deletion protection is enabled. The database cannot be deleted when this value is set.</td>
      <td><code>false</code></td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>aws_vpc_id</code></td>
      <td>String</td>
      <td>The Virtual Private Cloud (VPC) to connect the instance to</td>
      <td>The default VPC</td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>rds_subnet_group</code></td>
      <td>String</td>
       <td>The name of the subnet to attach the database instance to.
         This overrides <code>aws_vpc_id</code>.</td>
      <td><code>""</code></td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>rds_vpc_security_group_ids</code></td>
      <td>Comma-separated String</td>
      <td>Security group IDs to assign to the database instance.</td>
      <td><code>""</code></td>
      <td>provision</td>
    </tr>
    <tr>
      <td><code>require_ssl</code></td>
      <td>Boolean</td>
      <td>Only allow secure database connections.</td>
      <td><code>false</code></td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>provider_verify_certificate</code></td>
      <td>Boolean</td>
      <td>Whether to verify the certificate of the database server when creating bindings.</td>
      <td><code>true</code></td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>storage_autoscale</code></td>
      <td>Boolean</td>
      <td>Enable storage autoscaling up to <code>storage_autoscale_limit_gb</code> if true and
          <code>storage_autoscale_limit_gb</code> is greater than 0.
      </td>
      <td><code>false</code></td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>storage_autoscale_limit_gb</code></td>
      <td>Integer</td>
      <td>
        Maximum storage size if <code>storage_autoscale</code> is set to true.
        The value must be higher than <code>storage_gb</code>.
        Autoscaling is deactivated if this value is less than <code>storage_gb</code> or no value is set.
      </td>
      <td><code>0</code></td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>monitoring_interval</code></td>
      <td>Integer</td>
      <td>
        The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the database instance.
        To stop collecting Enhanced Monitoring metrics, enter 0. Valid values: 0, 1, 5, 10, 15, 30, 60.
        A <code>monitoring_role_arn</code> value is required if you enter a <code>monitoring_interval</code> value other than 0.
      </td>
      <td><code>0</code></td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>monitoring_role_arn</code></td>
      <td>String</td>
      <td>
        Enhanced Monitoring requires permission to act on your behalf to send OS metric information to CloudWatch Logs.
        This property represents the ARN for the IAM role that permits RDS to send enhanced monitoring metrics to CloudWatch Logs.
      </td>
      <td><code>""</code></td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>performance_insights_enabled</code></td>
      <td>Boolean</td>
      <td>
        Specifies whether Performance Insights are enabled.
        Performance Insights expands on existing Amazon RDS monitoring features to illustrate your
        database performance and help you analyze it.
        From the Performance Insights dashboard you can visualize the database load on your
        Amazon RDS database instance load and filter the load by wait types,
        SQL statements, hosts, or users.
      </td>
      <td><code>false</code></td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>performance_insights_kms_key_id</code></td>
      <td>String</td>
      <td>
        The ARN for the KMS key to encrypt Performance Insights data.
        When specifying <code>performance_insights_kms_key_id</code>, set <code>performance_insights_enabled</code> as <code>true</code>.
        After the KMS key is set, it can never be changed.
      </td>
      <td><code>""</code></td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>performance_insights_retention_period</code></td>
      <td>Integer</td>
      <td>
        The number of days for which to retain Performance Insights data.
        The value must be <code>7</code>, <code>NUMBER-OF-MONTHS</code> * 31 (where <code>NUMBER-OF-MONTHS</code> is <code>1</code>-<code>23</code>), or <code>731</code>.<br>
        For example, the following values are valid: <code>93</code> (because it's 3 months * 31),
        <code>341</code> (because it's 11 months * 31), <code>589</code> (because it's 19 months * 31),
        and <code>731</code>.<br><br>
        If you specify an invalid retention period, such as <code>94</code>, RDS issues an error.
      </td>
      <td><code>7</code></td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>enable_export_postgresql_logs</code></td>
      <td>Boolean</td>
      <td>
        If <code>true</code>, it enables the PostgreSQL <code>cloud_watch_log_export</code>
        on the RDS instance.
        It requires setting <code>parameter_group_name</code> with a pre-created Parameter Group that
        fulfills requirements for PostgreSQL log exports.
        For config options, see the
        <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.Concepts.PostgreSQL.html#USER_LogAccess.Concepts.PostgreSQL.Query_Logging">AWS documentation</a>.<br><br>
        When activated, it creates an associated PostgreSQL CloudWatch log group.
        When deactivated, the associated PostgreSQL CloudWatch log group is deleted.
      </td>
      <td><code>false</code></td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>cloudwatch_postgresql_log_group_retention_in_days</code></td>
      <td>Integer</td>
      <td>
        If provided, it specifies the number of days you want to retain log events in the
        <code>postgresql</code> log group.
        It is used in conjunction with <code>enable_export_postgresql_logs</code>.
        If you select 0, the events in the log group are always retained and never expire.
      </td>
      <td><code>30</code></td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>enable_export_upgrade_logs</code></td>
      <td>Boolean</td>
      <td>
        If <code>true</code>, it enables the <code>upgrade</code> <code>cloud_watch_log_export</code>
        on the RDS instance.
        The upgrade log group only receives logs after a major upgrade happens (in other words, when
        the <code>pgupgrade</code> module is invoked).<br><br>
        When activated, it creates an associated upgrade CloudWatch log group.
        When deactivated, the associated upgrade CloudWatch log group is deleted.
      </td>
      <td><code>false</code></td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>cloudwatch_upgrade_log_group_retention_in_days</code></td>
      <td>Integer</td>
      <td>
        If provided, it specifies the number of days you want to retain log events in the
        <code>upgrade</code> log group.
        It is used in conjunction with <code>enable_export_upgrade_logs</code>.
        If you select 0, the events in the log group are always retained and never expire.
      </td>
      <td><code>30</code></td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>cloudwatch_log_groups_kms_key_id</code></td>
      <td>String</td>
      <td>
        Log group data is always encrypted in CloudWatch Logs. By default, CloudWatch Logs uses
        server-side encryption for the log data at rest.
        As an alternative, you can use AWS Key Management Service (AWS KMS) for this encryption.
        If you use AWS KMS, the encryption is done by using an AWS KMS customer-managed key.<br><br>
        This property, if provided, sets the customer-managed key to use for encrypting the CloudWatch
        log group created for the RDS PostgreSQL and upgrade logs.
        It is used in conjunction with <code>enable_export_postgresql_logs</code> and
        <code>enable_export_upgrade_logs</code>.
      </td>
      <td><code>""</code></td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>aws_access_key_id</code></td>
      <td>String</td>
      <td>The AWS Access Key to use for an instance.</td>
      <td>The value the operator entered for <strong>AWS Access Key</strong> in <%= vars.ops_manager %>.</td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>aws_secret_access_key</code></td>
      <td>String</td>
      <td>The corresponding secret for the AWS Access Key to use for an instance.</td>
      <td>The value the operator entered for <strong>AWS Secret Access Key</strong> in <%= vars.ops_manager %>.</td>
      <td>provision and update</td>
    </tr>
  </tbody>
</table>

## <a id="binding"></a> Binding

You can bind a service by running:

```console
cf bind-service APP-NAME SERVICE-INSTANCE-NAME --binding-name BINDING-NAME
```

## <a id="binding-creds"></a> Binding Credentials

The format for binding credentials for PostgreSQL is as follows:

```json
{
    "name" : "DATABASE-NAME",
    "hostname" : "DATABASE-SERVER-HOST",
    "port" : "DATABASE-SERVER-PORT",
    "username" : "AUTHENTICATION-USERNAME",
    "password" : "AUTHENTICATION-PASSWORD",
    "uri" : "DATABASE-CONNECTION-URI",
    "use_tls" : true,
    "jdbcUrl" : "JDBC-FORMAT-CONNECTION-URL"
}
```

A binding or service key corresponds to a user in PostgreSQL.
By default, PostgreSQL users do not have have access to data written by other users.
For bindings to have access to the same data, the `public` schema can be used, or a schema can be
created and access can be granted to other users.

When a binding or service key is deleted, data owned by the PostgreSQL user is re-assigned to a role
called `binding_user_group` before the user is deleted. This ensures that other bindings still have
access to the data.

## <a id="old-plans"></a> Previously Provided Pre-configured Plans

The following table lists the previously provided plans for the Amazon RDS for PostgreSQL service:

| Plan   | Description                                                |
|--------|------------------------------------------------------------|
| small  | PostgreSQL 11, 2 vCPUs, 8&nbsp;GB RAM, 5&nbsp;GB storage   |
| medium | PostgreSQL 11, 4 vCPUs, 16&nbsp;GB RAM, 10&nbsp;GB storage |
| large  | PostgreSQL 11, 8 vCPUs, 32&nbsp;GB RAM, 20&nbsp;GB storage |

To keep these plans in this version of the broker, add them through the tile as custom plans.
For how to configure plans through the tile, see
[Configure Services with <%= vars.product_short %>](../installing-with-aws.html#services).

Add the following block to keep the `small` plan:

```json
{
    "name": "small",
    "id": "ffc51616-228b-41bd-bed1-d601c18d58f5",
    "description": "PostgreSQL 11, minimum 2 cores, minimum 4GB ram, 5GB storage",
    "cores": 2,
    "storage_gb": 5,
    "storage_type": "gp2",
    "postgres_version": 11,
    "metadata": {
      "displayName": "small",
      "bullets": ["PostgreSQL 11", "minimum 2 cores", "minimum 4GB ram", "5GB storage"]
    }
}
```

Add the following block to keep the `medium` plan:

```json
{
    "name": "medium",
    "id": "e64d07f9-ceb2-40a6-abd9-391047fa3cf5",
    "description": "PostgreSQL 11, minimum 4 cores, minimum 8GB ram, 10GB storage",
    "cores": 4,
    "storage_gb": 10,
    "storage_type": "gp2",
    "postgres_version": 11,
    "metadata": {
      "displayName": "medium",
      "bullets": ["PostgreSQL 11", "minimum 4 cores", "minimum 8GB ram", "10GB storage"]
    }
}
```

Add the following block to keep the `large` plan:

```json
{
    "name": "large",
    "id": "48baef10-a14c-4ae1-aab5-25f26eba941a",
    "description": "PostgreSQL 11, minimum 8 cores, minimum 16GB ram, 20GB storage",
    "cores": 8,
    "storage_gb": 20,
    "storage_type": "gp2",
    "postgres_version": 11,
    "metadata": {
      "displayName": "large",
      "bullets": ["PostgreSQL 11", "minimum 8 cores", "minimum 16GB ram", "20GB storage"]
    }
}
```
