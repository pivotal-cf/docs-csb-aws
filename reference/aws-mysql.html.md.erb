---
title: Amazon RDS for MySQL
owner: Cloud Service Broker
---

<strong><%= modified_date %></strong>

This topic provides reference information about the Amazon RDS for MySQL (aws-rds-mysql) service.
It details the plans, configuration parameters, and binding credentials.

## <a id="plans"></a> Plans

The default plans and configuration options for Amazon RDS for MySQL are in the table below:

| Plan | Instance Class | Version | CPUs | Memory Size | Disk Size |
|------|---------|---------|------|-------------|-----------|
|small | db.t2.medium | 5.7     | 2    | minimum 4&nbsp;GB     | 5&nbsp;GB       |
|medium| db.m4.xlarge | 5.7      | 4    | minimum 8&nbsp;GB     | 10&nbsp;GB      |
|large | db.m4.2xlarge | 5.7      | 8    | minimum 16&nbsp;GB    | 20&nbsp;GB      |


## <a id="plans-config"></a> Plan Configuration Parameters

When configuring <%= vars.product_short %> you can add additional plans.
For how to configure plans, see
[Configure Services with Cloud Service Broker for AWS](../installing-with-aws.html#services).

The following table lists parameters which can only be configured for additional plans:

| Parameter Name       | Values                         | Default   |
|----------------------|--------------------------------|-----------|
| `name`*              | The plan name.                 | _n/a_     |
| `id`*                | A unique GUID.                 | _n/a_     |
| `description`*       | Description of the new plan.   | _n/a_     |
| `display_name`       | Name to use when displaying plan in marketplace.    | _n/a_     |
| `free`               | When false, service instances of this service plan have a cost.    | true     |
| `bindable`           | Specifies whether Service Instances of the Service Plan can bind to applications.    | true     |
| `plan_updateable`    | Whether the Plan supports upgrading, downgrading, or sidegrading to another version.    | true     |
| `cores`*             | Minimum number of cores for service instance. 1&ndash;64, multiples of 2.    | 2     |
| `mysql_version`*     | The version for the MySQL instance. Options are 5.6 or 5.7.    | 5.7     |
| `storage_gb`*        | Size of storage volume for service instance. 5&ndash;4096.    | 5     |

<sup>*</sup> Required

You can also add any of the configuration parameters listed in the [parameters](#parameters) section to your plan.

To create plans with specific size and versions we recommend setting `cores`, `storage_gb` and
`mysql_version` properties.

<p class="note">
  <strong>Note:</strong> If you set a parameter at plan level, developers cannot
  change the value when creating or updating service instances.
</p>

## <a id="parameters"></a> Configuration Parameters

You can provision a service by running:

```
cf create-service aws-rds-mysql PLAN-NAME SERVICE-INSTANCE-NAME -c '{"PARAMETER-NAME": "PARAMETER-VALUE"}
```

You can update the configuration parameters for a service instance by running:

```
cf update-service SERVICE-INSTANCE -c '{"PARAMETER-NAME": "PARAMETER-VALUE"}'
```

The table below lists the parameters that you can configure in <%= vars.ops_manager %>.
You can also configure these parameters using the `-c` flag when provisioning or updating a `aws-rds-mysql` service:

<table class="nice">
  <thead>
    <tr>
      <th width="20%">Parameter Name</th>
      <th width="10%">Type</th>
      <th width="40%">Description</th>
      <th width="20%">Default</th>
      <th width="10%">Operation</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code>instance_name</code></td>
      <td>String</td>
      <td>The name of the AWS instance to create.</td>
      <td><code>csb-mysql-INSTANCE-ID</code></td>
      <td>provision</td>
    </tr>
    <tr>
      <td><code>db_name</code></td>
      <td>String</td>
      <td>The name of the database.</td>
      <td><code>vsbdb</code></td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>multi_az</code></td>
      <td>Boolean</td>
      <td>
        Make the instance Multi-AZ if true. For more information about Multi-AZ deployments, see the
        <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.MultiAZ.html">AWS documentation</a>.
      </td>
      <td><code>false</code></td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>region</code></td>
      <td>String</td>
      <td>
        The AWS region to deploy the service in.
        For more information about available regions, see the
        <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html#concepts-available-regions">AWS documentation</a>.
      </td>
      <td><code>us-west-2</code></td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>aws_vpc_id</code></td>
      <td>String</td>
      <td>The Virtual Private Cloud (VPC) to connect the instance to.</td>
      <td>The default VPC</td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>rds_subnet_group</code></td>
      <td>String</td>
       <td>The name of subnet to attach the database instance to.
         This overrides <code>aws_vpc_id</code>.</td>
      <td>None</td>
    </tr>
    <tr>
      <td><code>rds_vpc_security_group_ids</code></td>
      <td>Comma-separated String</td>
      <td>Security group IDs to assign to the database instance.</td>
      <td>None</td>
    </tr>
    <tr>
      <td><code>aws_access_key_id</code></td>
      <td>String</td>
      <td>The AWS Access Key to use for an instance.</td>
      <td>The value the operator entered for <strong>AWS Access Key</strong> in <%= vars.ops_manager %>.</td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>aws_secret_access_key</code></td>
      <td>String</td>
      <td>The corresponding secret for the AWS Access Key to use for an instance.</td>
      <td>The value the operator entered for <strong>AWS Secret Access Key</strong> in <%= vars.ops_manager %>.</td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>instance_class</code></td>
      <td>String</td>
      <td>Specifying the instance class overrides the conversion of cores to instance classes that is
        described in the <em>Core to Instance Class Mapping</em> table in the
        <a href="#aws-mysql-plans">Plans for MySQL</a> section above.<br><br>
        For more information about database instance classes, see the
        <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html">AWS documentation</a>.
      </td>
      <td><em>n/a</em></td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>multi-az</code></td>
      <td>Boolean</td>
      <td>If <code>true</code>, create a Multi-AZ (HA) instance.
        For more information about Multi-AZ deployment, see the
        <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.MultiAZ.html">AWS documentation</a>.
      </td>
      <td>
        <code>false</code>
      </td>
    </tr>
    <tr>
      <td><code>publicly_accessible</code></td>
      <td>Boolean</td>
      <td>If <code>true</code>, make instance available to public connections.</td>
      <td><code>false</code></td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>allow_major_version_upgrade</code></td>
      <td>Boolean</td>
      <td>Indicates that major version upgrades are allowed.
        Changing this parameter does not result in an outage and the change is
        asynchronously applied as soon as possible.</td>
      <td><code>true</code></td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>auto_minor_version_upgrade</code></td>
      <td>Boolean</td>
      <td>(Optional) Indicates that minor engine upgrades are applied automatically
        to the database instance during the maintenance window.</td>
      <td><code>true</code></td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>maintenance_day</code></td>
      <td>String</td>
      <td>The preferred maintenance day. Options: Sun, Mon, Tue, Wed, Thu, Fri, Sat </td>
      <td><code>Sun</code></td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>maintenance_start_hour</code></td>
      <td>String</td>
      <td>The preferred maintenance start hour. </td>
      <td><code>00</code></td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>maintenance_start_min</code></td>
      <td>String</td>
      <td>The preferred maintenance start minute. </td>
      <td><code>00</code></td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>maintenance_end_hour</code></td>
      <td>String</td>
      <td>The preferred maintenance end hour. </td>
      <td><code>00</code></td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>maintenance_end_min</code></td>
      <td>String</td>
      <td>The preferred maintenance end minute. </td>
      <td><code>00</code></td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>storage_encrypted</code></td>
      <td>Boolean</td>
      <td>If <code>true</code>, database storage is encrypted.</td>
      <td><code>false</code></td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>parameter_group_name</code></td>
      <td>String</td>
      <td>The MySQL parameter group name for the service instance.</td>
      <td><code>default.mysql.MYSQL-VERSION</code></td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>use_tls</code></td>
      <td>Boolean</td>
      <td>Use TLS for database connections.</td>
      <td><code>true</code></td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>storage_autoscale</code></td>
      <td>Boolean</td>
      <td>Enable storage autoscaling up to <code>storage_autoscale_limit_gb</code>.</td>
      <td><code>false</code></td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>storage_autoscale_limit_gb</code></td>
      <td>Number</td>
      <td>Maximum storage size if <code>storage_autoscale</code> is enabled.</td>
      <td><code>0</code></td>
      <td>provision and update</td>
    </tr>
  </tbody>
</table>

## <a id="binding"></a> Binding

You can bind a service by running:

```bash
cf bind-service APP-NAME SERVICE-INSTANCE --binding-name BINDING-NAME
```

## <a id="binding-creds"></a> Binding Credentials

The format for binding credentials for MySQL is as follows:

```json
{
    "name" : "DATABASE-NAME",
    "hostname" : "DATABASE-SERVER-HOST",
    "port" : "DATABASE-SERVER-PORT",
    "username" : "AUTHENTICATION-USERNAME",
    "password" : "AUTHENTICATION-PASSWORD",
    "uri" : "DATABASE-CONNECTION-URI",
    "jdbcUrl" : "JDBC-FORMAT-CONNECTION-URI"
    "use-tls" : true
}
```
