---
title: Amazon DynamoDB (beta)
owner: Cloud Service Broker
---

<strong><%= modified_date %></strong>

This topic gives you reference information about the [Amazon DynamoDB](https://aws.amazon.com/dynamodb/)
(csb-aws-dynamodb) service.
It details the plans, configuration parameters, and binding credentials.

>**Important**
>The Amazon DynamoDB Table service is in beta and is intended
  for evaluation and test purposes only. Do not use this service in a production environment.


## <a id="plans"></a> Plans

The default plans for Amazon DynamoDB are in the table below:

| Plan | Billing Mode |
|------|--------------|
| ondemand | With on-demand capacity mode, DynamoDB is charged for the data reads and writes the application performs on the table. |
| provisioned | With provisioned capacity mode, specify the number of reads and writes per second that the application is expected to require. |

## <a id="plans-config"></a> Plan configuration parameters

When configuring <%= vars.product_short %> you can add additional plans.
For how to configure plans, see
[Configure Services with Cloud Service Broker for AWS](../installing-with-aws.html#services).

The following table lists parameters which can only be configured for additional plans:

| Parameter Name       | Values                         | Default   |
|----------------------|--------------------------------|-----------|
| `name`*              | The plan name.                  | _n/a_     |
| `id`*                | A unique GUID.                  | _n/a_     |
| `description`*       | Description of the new plan.    | _n/a_     |
| `display_name`       | Name to use when displaying the plan in marketplace.    | _n/a_     |
| `free`               | When false, service instances of this service plan have a cost.    | true     |
| `bindable`           | Specifies whether service instances of the service plan can bind to applications.    | true     |
| `plan_updateable`    | Whether the plan supports upgrading, downgrading, or sidegrading to another version.    | true     |
| `billing_mode`*      | Controls how you are billed for read/write throughput and how you manage capacity.  | PAY_PER_REQUEST     |
| `metadata.displayName`    | Name to use when displaying the plan in the Marketplace.                                     | _n/a_   | No       |
| `metadata.bullets`        | List of bullet points to display in Apps Manager.                                    | _n/a_   | No       |

<sup>*</sup> Required

You can also add any of the parameters listed in the [Configuration Parameters](#parameters) section to your plan.

>**Note**
>If you set a parameter at plan level, developers cannot change the value when
  creating or updating service instances.

## <a id="parameters"></a> Configuration parameters

You can provision an Amazon DynamoDB table by running:

```console
cf create-service csb-aws-dynamodb PLAN-NAME SERVICE-INSTANCE-NAME -c '{"PARAMETER-NAME": "PARAMETER-VALUE"}
```

For example:

<pre class="terminal">
$ cf create-service csb-aws-dynamodb ondemand my-service -c '
{
  "attributes": [
    {"name":"id","type":"S"},
    {"name":"key","type":"S"},
    {"name":"value","type":"S"}
  ],
  "global_secondary_indexes": [
    {
      "hash_key": "key",
      "name": "KeyIndex",
      "non_key_attributes": ["id"],
      "projection_type": "INCLUDE",
      "range_key": "value"
    }
  ],
  "hash_key": "id",
  "range_key": "value",
  "table_name": "csb-dynamodb-test"
}'
</pre>

You can update the configuration parameters for a service instance by running:

```console
cf update-service SERVICE-INSTANCE-NAME -c '{"PARAMETER-NAME": "PARAMETER-VALUE"}'
```

The following table lists the parameters that you can configure, by using the `-c` flag, when
provisioning or updating a `csb-aws-dynamodb` service.
The Operation column displays whether a parameter is supported for both provision and update, or for
provision only:

<table class="nice">
  <thead>
    <tr>
      <th width="20%">Parameter Name</th>
      <th width="10%">Type</th>
      <th width="40%">Description</th>
      <th width="20%">Default</th>
      <th width="10%">Operation</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code>table_name</code></td>
      <td>String</td>
      <td>(Required) The name of the table</td>
      <td>None</td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>hash_key</code></td>
      <td>String</td>
      <td>(Required) The key to use as the hash key</td>
      <td>None</td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>range_key</code></td>
      <td>String</td>
      <td>(Required) The key to use as the range key</td>
      <td>None</td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>attributes</code></td>
      <td>Array</td>
      <td>(Required) A list of attributes and their types, for example: <code>[{"name":"id", "type":"S"}, {"name":"value", "type":"S"}]</code></td>
      <td>None</td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>global_secondary_indexes</code></td>
      <td>Array</td>
      <td>(Required) A list of global secondary indexes, for example: <code>[{"name":"KeyIndex", "hash_key":"key", "range_key":"value", "projection_type":"INCLUDE", "non_key_attributes":["id"]}]</code></td>
      <td>None</td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>local_secondary_indexes</code></td>
      <td>Array</td>
      <td>A list of local secondary indexes, for example: <code>[{"name":"KeyIndex", "hash_key":"key", "range_key":"value", "projection_type":"INCLUDE", "non_key_attributes":["id"]}]</code></td>
      <td><code>[]</code></td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>instance_name</code></td>
      <td>String</td>
      <td>The name of the AWS instance to create</td>
      <td><code>csb-dynamodb-INSTANCE-ID</code></td>
      <td>provision</td>
    </tr>
    <tr>
      <td><code>region</code></td>
      <td>String</td>
      <td>
        This is the AWS region to deploy the service in.
        For more information about available regions, see the
        <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html#concepts-available-regions">AWS documentation</a>.
      </td>
      <td><code>us-west-2</code></td>
      <td>provision</td>
    </tr>
    <tr>
      <td><code>ttl_enabled</code></td>
      <td>Boolean</td>
      <td>Whether TTL is enabled</td>
      <td><code>false</code></td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>ttl_attribute_name</code></td>
      <td>String</td>
      <td>The name of the table attribute to store the TTL timestamp in</td>
      <td><code>""</code></td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>stream_enabled</code></td>
      <td>Boolean</td>
      <td>Indicates whether Streams are to be enabled</td>
      <td><code>false</code></td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>stream_view_type</code></td>
      <td>String</td>
      <td>Valid values are <code>KEYS_ONLY</code>, <code>NEW_IMAGE</code>, <code>OLD_IMAGE</code>, <code>NEW_AND_OLD_IMAGES</code></td>
      <td><code>null</code></td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>server_side_encryption_enabled</code></td>
      <td>Boolean</td>
      <td>Whether or not to enable encryption at rest using an AWS-managed KMS customer master key (CMK).</td>
      <td><code>false</code></td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>server_side_encryption_kms_key_arn</code></td>
      <td>String</td>
      <td>The ARN of the CMK that should be used for the AWS KMS encryption. This attribute should only be specified if the key is different from the default DynamoDB CMK, alias/aws/dynamodb.</td>
      <td><code>null</code></td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>write_capacity</code></td>
      <td>Number</td>
      <td>The number of write units for this table. If <code>billing_mode</code> is <code>PROVISIONED</code>, this field should be greater than 0.</td>
      <td><code>0</code></td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>read_capacity</code></td>
      <td>Number</td>
      <td>The number of read units for this table. If <code>billing_mode</code> is <code>PROVISIONED</code>, this field should be greater than 0.</td>
      <td><code>0</code></td>
      <td>provision and update</td>
    </tr>
  </tbody>
</table>

## <a id="binding-params"></a> Binding parameters

You can bind a service by running:

```bash
cf bind-service APP-NAME SERVICE-INSTANCE --binding-name BINDING-NAME -c '{"PARAMETER-NAME": "PARAMETER-VALUE"}'
```

The table below lists the parameters that you can configure, using the `-c` flag, when
binding to a `csb-aws-dynamodb` service:

<table>
  <thead>
    <tr>
      <th width="20%">Parameter Name</th>
      <th width="10%">Type</th>
      <th width="40%">Description</th>
      <th width="20%">Default</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code>aws_access_key_id</code></td>
      <td>String</td>
      <td>The AWS Access Key to use for an instance</td>
      <td>The value the operator entered for <strong>AWS Access Key</strong> in <%= vars.ops_manager %></td>
    </tr>
    <tr>
      <td><code>aws_secret_access_key</code></td>
      <td>String</td>
      <td>The corresponding secret for the AWS Access Key to use for an instance</td>
      <td>The value the operator entered for <strong>AWS Secret Access Key</strong> in <%= vars.ops_manager %></td>
    </tr>
  </tbody>
</table>

## <a id="binding-creds"></a> Binding credentials

The format for binding credentials for DynamoDB is as follows:

```json
{
    "access_key_id" : "AWS-ACCESS-KEY-ID",
    "secret_access_key" : "AWS-SECRET-ACCESS-KEY",
    "region" : "AWS-REGION",
    "dynamodb_table_name": "DYNAMODB-TABLE-NAME",
    "dynamodb_table_arn" : "DYNAMODB-TABLE-ARN",
    "dynamodb_table_id" : "DYNAMODB-TABLE-ID"
}
```
