---
title: Amazon RDS for MSSQL (Beta)
owner: Cloud Service Broker
---

<strong><%= modified_date %></strong>

This topic gives you reference information about the [Amazon RDS for MSSQL](https://aws.amazon.com/sql/)
(csb-aws-mssql) service. It details the plans, configuration parameters, and binding credentials.

>**Important**
>The Amazon RDS for MSSQL service is in beta and is intended for
  evaluation and test purposes only. Do not use this service in a production environment.
>Also, For secure connections to work, install the AWS certificate bundle in
  <%= vars.ops_manager %>.

## <a id="plans-config"></a> Plan Configuration Parameters

When configuring <%= vars.product_short %>, you can add additional plans.
For how to configure plans, see
[Configure Services with Cloud Service Broker for AWS](../installing-with-aws.html.md.erb#services).

The following table lists parameters that can only be configured for additional plans:

| Parameter Name         | Description                                                                         | Default | Required |
|------------------------|-------------------------------------------------------------------------------------|---------|----------|
| `name`                 | The plan name                                                                       | _n/a_   | Yes      |
| `id`                   | A unique GUID                                                                       | _n/a_   | Yes      |
| `description`          | Description of the new plan                                                         | _n/a_   | Yes      |
| `free`                 | When false, service instances of this service plan have a cost                      | true    | No       |
| `bindable`             | Specifies whether service instances of the service plan can bind to applications    | true    | No       |
| `plan_updateable`      | Whether the plan supports upgrading, downgrading, or sidegrading to another version | true    | No       |
| `metadata.displayName` | Name to use when displaying the plan in Marketplace                                 | _n/a_   | No       |
| `metadata.bullets`     | List of bullet points to display in Apps Manager                                    | _n/a_   | No       |

You can also add any of the parameters listed in the [Configuration Parameters](#parameters) section
to your plan.

>**Note**
>If you set a parameter at plan level, developers cannot change the value
  when creating or updating service instances.

## <a id="parameters"></a> Configuration Parameters

You can provision a service by running:

```console
cf create-service csb-aws-mssql PLAN-NAME SERVICE-INSTANCE-NAME -c '{"PARAMETER-NAME": "PARAMETER-VALUE"}
```

You can update the configuration parameters for a service instance by running:

```console
cf update-service SERVICE-INSTANCE-NAME -c '{"PARAMETER-NAME": "PARAMETER-VALUE"}'
```

The following table lists the parameters that you can configure, by using the `-c` flag, when
provisioning or updating a `csb-aws-mssql` service.
The Operation column displays whether a parameter is supported for both provision and update, or for
provision only:

<table class="nice">
  <thead>
    <tr>
      <th width="20%">Parameter Name</th>
      <th width="10%">Type</th>
      <th width="40%">Description</th>
      <th width="20%">Default</th>
      <th width="10%">Operation</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code>instance_name</code></td>
      <td>String</td>
      <td>The name of the AWS instance to create.</td>
      <td><code>csb-mssql-INSTANCE-ID</code></td>
      <td>provision</td>
    </tr>
    <tr>
      <td><code>db_name</code></td>
      <td>String</td>
      <td>The name of the database.</td>
      <td><code>vsbdb</code></td>
      <td>provision</td>
    </tr>
    <tr>
      <td><code>region</code></td>
      <td>String</td>
      <td>
        The AWS region to deploy the service in.
        For more information about available regions, see the
        <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html#concepts-available-regions">AWS documentation</a>.
      </td>
      <td><code>us-west-2</code></td>
      <td>provision</td>
    </tr>
    <tr>
      <td><code>mssql_version</code></td>
      <td>String</td>
      <td>
        (Required) The version for the MSSQL instance. It can be any version supported by the provider.
        For more information about Microsoft SQL versions on Amazon RDS, see the
        <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_SQLServer.html#SQLServer.Concepts.General.VersionSupport">AWS documentation</a>.
      </td>
      <td>None</td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>engine</code></td>
      <td>String</td>
      <td>
        (Required) The edition for the MSSQL instance.
        Amazon RDS supports the following Microsoft SQL Server editions:
            <ul>
                <li>Enterprise: <code>sqlserver-ee</code></li>
                <li>Express: <code>sqlserver-ex</code></li>
                <li>Standard: <code>sqlserver-se</code></li>
                <li>Web: <code>sqlserver-web</code></li>
            </ul>
      </td>
      <td>None</td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>storage_gb</code></td>
      <td>Integer</td>
      <td>
        (Required) Size of storage volume for service instance.
        Minimum admitted value: 20&nbsp;GB.
        For more information about Amazon RDS DB instance storage for MSSQL, see the
        <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Storage.html">AWS documentation</a>.
      </td>
      <td>None</td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>instance_class</code></td>
      <td>String</td>
      <td>
        (Required) The database instance class determines the computation and memory capacity of an
        RDS MSSQL database instance.
        Accepted values depend on the selected <code>engine</code> and <code>mssql_version</code>.
        For information about the restrictions associated with the different types of instances that
        RDS MSSQL accepts, see the
        <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_SQLServer.html#SQLServer.Concepts.General.InstanceClasses">AWS documentation</a>.
      </td>
      <td>None</td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>storage_type</code></td>
      <td>String</td>
      <td>
        Type of storage to be used.
        For more information check <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Storage.html#Concepts.Storage">Amazon RDS storage types</a>.
      </td>
      <td><code>io1</code></td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>iops</code></td>
      <td>Integer</td>
      <td>
        The amount of provisioned IOPS.
        For this property to take effect, <code>storage_type</code> must be set to <code>gp3</code> or <code>io1</code>.
        For more information on customizing iops with gp3 check <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Storage.html#Concepts.Storage.GeneralSSD">General Purpose SSD storage</a>.
        For more information on customizing iops with io1 check <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Storage.html#USER_PIOPS">Provisioned IOPS storage</a>.
      </td>
      <td><code>3000</code></td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>aws_vpc_id</code></td>
      <td>String</td>
      <td>The Virtual Private Cloud (VPC) to connect the instance to.</td>
      <td>The default VPC</td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>rds_subnet_group</code></td>
      <td>String</td>
       <td>
       The name of the subnet to attach the database instance to.
       When set, you must also specify the corresponding <code>aws_vpc_id</code>.
       When both <code>rds_subnet_group</code> and <code>rds_vpc_security_group_ids</code>
       are provided, they must be coherent and depend on the same <code>aws_vpc_id</code>.
       </td>
      <td>None</td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>rds_vpc_security_group_ids</code></td>
      <td>Comma-separated String</td>
      <td>
      Security group IDs to assign to the database instance.
      When set, you must also specify the corresponding <code>aws_vpc_id</code>.
      When both <code>rds_subnet_group</code> and <code>rds_vpc_security_group_ids</code>
      are provided, they must be coherent and depend on the same <code>aws_vpc_id</code>.
      </td>
      <td>None</td>
      <td>provision</td>
    </tr>
    <tr>
      <td><code>aws_access_key_id</code></td>
      <td>String</td>
      <td>The AWS Access Key to use for an instance.</td>
      <td>The value the operator entered for <strong>AWS Access Key</strong> in <%= vars.ops_manager %>.</td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>aws_secret_access_key</code></td>
      <td>String</td>
      <td>The corresponding secret for the AWS Access Key to use for an instance.</td>
      <td>The value the operator entered for <strong>AWS Secret Access Key</strong> in <%= vars.ops_manager %>.</td>
      <td>provision and update</td>
    </tr>
    <tr>
        <td><code>storage_encrypted</code></td>
        <td>Boolean</td>
        <td>
        Specifies whether a database instance is encrypted. For more details on encrypting a database instance, see the <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.Encryption.html#Overview.Encryption.Enabling">AWS documentation</a>.
        Do not confuse this with <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Appendix.SQLServer.Options.TDE.html">Transparent Data Encryption (TDE).</a>
        </td>
        <td><code>true</code></td>
        <td>provision</td>
    </tr>
    <tr>
        <td><code>kms_key_id</code></td>
        <td>String</td>
        <td>The Amazon Resource Name (ARN) for the user-managed KMS encryption key. When setting this value, <code>storage_encrypted</code> must be enabled. When not set, the AWS managed key is used for encrypting the database.</td>
        <td><code>""</code></td>
        <td>provision</td>
    </tr>
  </tbody>
</table>

## <a id="binding"></a> Binding

You can bind a service by running:

```console
cf bind-service APP-NAME SERVICE-INSTANCE-NAME --binding-name BINDING-NAME
```

## <a id="binding-creds"></a> Binding Credentials

The format for binding credentials for MSSQL is as follows:

```json
{
    "name" : "DATABASE-NAME",
    "hostname" : "DATABASE-SERVER-HOST",
    "port" : "DATABASE-SERVER-PORT",
    "username" : "AUTHENTICATION-USERNAME",
    "password" : "AUTHENTICATION-PASSWORD",
    "uri" : "DATABASE-CONNECTION-URI",
    "jdbcUrl" : "JDBC-FORMAT-CONNECTION-URL"
}
```