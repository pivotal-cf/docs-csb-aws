---
title: Amazon ElastiCache for Redis (Beta)
owner: Cloud Service Broker
---

<strong><%= modified_date %></strong>

<p class="note important">
  <strong>Important:</strong> The Amazon ElastiCache for Redis service is currently in beta and is intended for
  evaluation and test purposes only. Do not use this service in a production environment.
</p>

This topic provides reference information about the <a href="https://aws.amazon.com/elasticache/redis">Amazon ElastiCache for Redis</a> (csb-aws-redis) service.
It details the plans, configuration parameters, and binding credentials.

## <a id="plans"></a> Plans

Tables for cache sizes and plans are below:

### Cache Size to AWS Node Type Mapping

| cache_size | node type         |
|------------|-------------------|
| 1          | cache.t2.small    |
| 2          | cache.t3.medium   |
| 4          | cache.m5.large    |
| 8          | cache.m5.xlarge   |
| 16         | cache.r4.xlarge   |
| 32         | cache.r4.2xlarge  |
| 64         | cache.r4.4xlarge  |
| 128        | cache.r4.8xlarge  |
| 256        | cache.r5.12xlarge |

## <a id="plans"></a> Plans

The default plans for Amazon ElastiCache for Redis are in the table below:

| Plan      | Cache Size         | AWS Cache Node Type | HA  |
|-----------|--------------------|---------------------|-----|
| small     | minimum 1&nbsp;GB  | cache.t2.small      | no  |
| medium    | minimum 4&nbsp;GB  | cache.m5.large      | no  |
| large     | minimum 16&nbsp;GB | cache.r4.xlarge     | no  |
| small-ha  | minimum 1&nbsp;GB  | cache.t2.small      | yes |
| medium-ha | minimum 4&nbsp;GB  | cache.m5.large      | yes |
| large-ha  | minimum 16&nbsp;GB | cache.r4.xlarge     | yes |


## <a id="plans-config"></a> Plan Configuration Parameters

When configuring <%= vars.product_short %> you can add additional plans.
For how to configure plans, see
[Configure Services with Cloud Service Broker for AWS](../installing-with-aws.html#services).

The following table lists parameters that can only be configured for additional plans:

| Parameter Name    | Values                                                                              | Default | Required |
|-------------------|-------------------------------------------------------------------------------------|---------|----------|
| `name`            | The plan name.                                                                       | _n/a_   | Yes      |
| `id`              | A unique GUID.                                                                       | _n/a_   | Yes      |
| `description`     | Description of the new plan.                                                         | _n/a_   | Yes      |
| `free`            | When false, service instances of this service plan have a cost.                      | true    | No       |
| `bindable`        | Specifies whether service instances of the service plan can bind to applications.    | true    | No       |
| `plan_updateable` | Whether the plan supports upgrading, downgrading, or sidegrading to another version. | true    | No       |
| `cache_size`      | Cache size in GB. 2&ndash;256, multiples of 2.                                      | _n/a_   | Yes      |
| `redis_version`   | The version for the Redis instance. It can be any AWS-supported Redis version.      | _n/a_   | Yes      |
| `metadata.displayName`    | Name to use when displaying the plan in the Marketplace.                                     | _n/a_   | No       |
| `metadata.bullets`        | List of bullet points to display in Apps Manager.                                    | _n/a_   | No       |

You can also add any of the parameters listed in the [Configuration Parameters](#parameters) section
to your plan.

<p class="note">
  <strong>Note:</strong> If you set a parameter at plan level, developers cannot change the value when creating
  or updating service instances.
</p>

## <a id="parameters"></a> Configuration Parameters

You can provision a service by running:

```console
cf create-service csb-aws-redis PLAN-NAME SERVICE-INSTANCE-NAME -c '{"PARAMETER-NAME": "PARAMETER-VALUE"}
```

You can update the configuration parameters for a service instance by running:

```console
cf update-service SERVICE-INSTANCE -c '{"PARAMETER-NAME": "PARAMETER-VALUE"}'
```

The following table lists the parameters that you can configure, by using the `-c` flag, when
provisioning or updating a `csb-aws-redis` service.
The Operation column displays whether a parameter is supported for both provision and update, or for
provision only:

<table class="nice">
  <thead>
    <tr>
      <th width="20%">Parameter Name</th>
      <th width="10%">Type</th>
      <th width="40%">Description</th>
      <th width="20%">Default</th>
      <th width="10%">Operation</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code>instance_name</code></td>
      <td>String</td>
      <td>The name of the AWS instance to create</td>
      <td><code>csb-redis-INSTANCE-ID</code></td>
      <td>provision</td>
    </tr>
    <tr>
      <td><code>region</code></td>
      <td>String</td>
      <td>
        The AWS region to deploy the service in.
        For more information about available regions, see the
        <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html#concepts-available-regions">AWS documentation</a>.
      </td>
      <td><code>us-west-2</code></td>
      <td>provision</td>
    </tr>
    <tr>
      <td><code>node_type</code></td>
      <td>String</td>
      <td>Specifying the node type overrides the `cache-size` conversion to node type that is
        described in the <strong>Cache Size to AWS Node Type Mapping</strong> table in the
        <a href="#aws-redis-plans">Plans for Amazon ElastiCache</a> section above.<br><br>
        For more information about node types and pricing, see the
        <a href="https://aws.amazon.com/elasticache/pricing/">AWS documentation</a>.</td>
      <td><em>n/a</em></td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>node_count</code></td>
      <td>Integer</td>
      <td>Number of nodes (primary and replicas) in the cluster</td>
      <td><code>2</code></td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>vpc_id</code></td>
      <td>String</td>
      <td>The Virtual Private Cloud (VPC) to connect the instance to</td>
      <td>The default VPC</td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>elasticache_subnet_group</code></td>
      <td>String</td>
      <td>Pre-existing AWS Elasticache subnet group to use</td>
      <td>_n/a_</td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>elasticache_vpc_security_group_ids</code></td>
      <td>String</td>
      <td>Comma-delimited list of security group IDs for the instance</td>
      <td>_n/a_</td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>aws_access_key_id</code></td>
      <td>String</td>
      <td>The AWS Access Key to use for an instance</td>
      <td>The value the operator entered for <strong>AWS Access Key</strong> in <%= vars.ops_manager %></td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>aws_secret_access_key</code></td>
      <td>String</td>
      <td>The corresponding secret for the AWS Access Key to use for an instance</td>
      <td>The value the operator entered for <strong>AWS Secret Access Key</strong> in <%= vars.ops_manager %></td>
      <td>provision and update</td>
    </tr>
  </tbody>
</table>

## <a id="binding"></a> Binding

You can bind a service by running:

```console
cf bind-service APP-NAME SERVICE-INSTANCE --binding-name BINDING-NAME
```

## <a id="binding-creds"></a> Binding Credentials

The format for binding credentials for Redis is as follows:

```json
{
    "name" : "REDIS-CLUSTER-NAME",
    "host" : "REDIS-SERVER-HOSTNAME",
    "password" : "AUTHENTICATION-PASSWORD",
    "tls_port" : "REDIS-TLS-PORT"
}
```