---
title: Amazon ElastiCache for Redis
owner: Cloud Service Broker
---

<strong><%= modified_date %></strong>

This topic gives you reference information about the
[Amazon ElastiCache for Redis](https://aws.amazon.com/elasticache/redis) (csb-aws-redis)
service. It details the plans, configuration parameters, and binding credentials.

<p class="note">
  <strong>Note:</strong> <%= vars.product_full %> v1.5.0 removes brokerpak pre-configured plans for Amazon ElastiCache for Redis.
  All plans must be configured through the tile.
  If you have instances of Amazon ElastiCache for Redis that were created in previous versions and that you want to
  maintain, see <a href="#old-plans">Previously Provided Pre-configured Plans</a>.
  For more information about upgrade steps, see
  <a href="../upgrading.html.md.erb">Upgrading <%= vars.product_full %></a>.
</p>

<p class="note">
  <strong>Note:</strong> In <%= vars.product_full %> v1.5.0 and later, changes made to this service using the <code>cf update-service</code> command are applied immediately.
  This is instead of being queued to be applied during the maintenance window.
  This might result in brief downtime while the server reboots.
</p>

## <a id="plans-config"></a> Plan Configuration Parameters

When configuring <%= vars.product_short %> you can add additional plans.
For how to configure plans, see
[Configure Services with Cloud Service Broker for AWS](../installing-with-aws.html#services).

The following table lists parameters that can only be configured for additional plans:

| Parameter Name         | Values                                                                                     | Default | Required |
|------------------------|--------------------------------------------------------------------------------------------|---------|----------|
| `name`                 | The plan name.                                                                             | _n/a_   | Yes      |
| `id`                   | A unique GUID.                                                                             | _n/a_   | Yes      |
| `description`          | Description of the new plan.                                                               | _n/a_   | Yes      |
| `free`                 | When false, service instances of this service plan have a cost.                            | true    | No       |
| `bindable`             | Specifies whether service instances of the service plan can bind to applications.          | true    | No       |
| `plan_updateable`      | Whether the plan supports upgrading, downgrading, or sidegrading to another version.       | true    | No       |
| `cache_size`           | Deprecated. Use `node_type` instead. The cache size is in GB. 2&ndash;256, multiples of 2. | _n/a_   | Yes      |
| `metadata.displayName` | Name to use when displaying the plan in the Marketplace.                                   | _n/a_   | No       |
| `metadata.bullets`     | List of bullet points to display in Apps Manager.                                          | _n/a_   | No       |

You can also add any of the parameters listed in the [Configuration Parameters](#parameters) section
to your plan.

<p class="note">
  <strong>Note:</strong> If you set a parameter at plan level, developers cannot change the value when creating
  or updating service instances.
</p>

## <a id="parameters"></a> Configuration Parameters

You can provision a service by running:

```console
cf create-service csb-aws-redis PLAN-NAME SERVICE-INSTANCE-NAME -c '{"PARAMETER-NAME": "PARAMETER-VALUE"}
```

You can update the configuration parameters for a service instance by running:

```console
cf update-service SERVICE-INSTANCE -c '{"PARAMETER-NAME": "PARAMETER-VALUE"}'
```

The following table lists the parameters that you can configure, by using the `-c` flag, when
provisioning or updating a `csb-aws-redis` service.
The Operation column displays whether a parameter is supported for both provision and update, or for
provision only:

<table class="nice">
  <thead>
    <tr>
      <th width="20%">Parameter Name</th>
      <th width="10%">Type</th>
      <th width="40%">Description</th>
      <th width="20%">Default</th>
      <th width="10%">Operation</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code>instance_name</code></td>
      <td>String</td>
      <td>The name of the AWS instance to create</td>
      <td><code>csbINSTANCE-ID</code></td>
      <td>provision</td>
    </tr>
    <tr>
      <td><code>region</code></td>
      <td>String</td>
      <td>
        The AWS region to deploy the service in.
        For more information about available regions, see the
        <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html#concepts-available-regions">AWS documentation</a>.
      </td>
      <td>The value the operator entered for <strong>Region</strong> in <%= vars.ops_manager %>.</td>
      <td>provision</td>
    </tr>
    <tr>
      <td><code>node_type</code></td>
      <td>String</td>
      <td>
        The AWS instance class to be used. The <code>node_type</code> you select impacts costs,
        performance, and fault tolerance.
       <br><br>
        The <code>node_type</code> cannot be updated from a family of type <code>r6gd</code> to all
        other families and the reverse.
        For more information about node types and pricing, see the
        <a href="https://aws.amazon.com/elasticache/pricing/">AWS documentation</a> and
       <br><a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/nodes-select-size.html">Choosing your node size</a>.
      </td>
      <td><code>""</code></td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>node_count</code></td>
      <td>Integer</td>
      <td>Number of nodes (primary and replicas) in the cluster</td>
      <td><code>2</code></td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>redis_version</code></td>
      <td>String</td>
      <td>
        The version for the Redis instance to be used in the replication group.
        If the version is 6 or later, you can set the major and minor version. For example,
        <code>6.2</code>. Alternatively, the minor version can be unspecified, which uses the latest
        version at creation time. For example, <code>6.x</code>.<br><br>
        Otherwise, specify the full version that you want. For example, <code>5.0.6</code>.
        In other words, <code>redis_version</code> must match <code>major.minor</code> when using
        version <code>6</code> or higher, or <code>major.minor.patch</code>.
        For more information about upgrading engine versions, see the
        <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/VersionManagement.html">AWS documentation</a>.
        <br><br>
        The downgrade of the version is not allowed because it involves the recreation of the instance.
        If you try to perform the operation, the Cloud Service Broker incurs an error because of
        the mechanism established to prevent the destruction of the instance.
      </td>
      <td>None</td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>auto_minor_version_upgrade</code></td>
      <td>Boolean</td>
      <td>(Optional) Indicates that minor engine upgrades are applied automatically
        to the redis instance during the maintenance window. Only supported for redis version 6 and above.
        When setting this parameter to `true`, `redis_version` must not specify a minor version and must be in the form
        `<MAJOR_VERSION>.x`. E.g `6.x` </td>
      <td><code>false</code></td>
      <td>provision and update</td>
    </tr>    
    <tr>
      <td><code>data_tiering_enabled</code></td>
      <td>Boolean</td>
      <td>
        Enables data tiering. Data tiering is only supported for replication groups that use the
        <code>r6gd</code> node type.
        This parameter must be set to <code>true</code> when using <code>r6gd</code> nodes.<br><br>
        Not all versions of Redis support this feature.
        For more information about node types and supported Redis versions, see the
        <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html">AWS documentation</a>.
      </td>
      <td><code>false</code></td>
      <td>provision</td>
    </tr>
    <tr>
      <td><code>aws_vpc_id</code></td>
      <td>String</td>
      <td>The Virtual Private Cloud (VPC) to connect the instance to</td>
      <td>The default VPC</td>
      <td>provision</td>
    </tr>
    <tr>
      <td><code>elasticache_subnet_group</code></td>
      <td>String</td>
      <td>Pre-existing AWS Elasticache subnet group to use</td>
      <td>
        The value the operator entered for <strong>Subnet group</strong> in <%= vars.ops_manager %>.<br>
        A new one is created if none is specified in <%= vars.ops_manager %> or provision parameters.
      </td>
      <td>provision</td>
    </tr>
    <tr>
      <td><code>elasticache_vpc_security_group_ids</code></td>
      <td>String</td>
      <td>Comma-delimited list of security group IDs for the instance</td>
      <td>
        The value the operator entered for <strong>Security group IDs</strong> in <%= vars.ops_manager %>.<br>
        A new one is created if none is specified in <%= vars.ops_manager %> or provision parameters.
      </td>
      <td>provision</td>
    </tr>
    <tr>
      <td><code>at_rest_encryption_enabled</code></td>
      <td>Boolean</td>
      <td>Whether to enable encryption at rest</td>
      <td><code>true</code></td>
      <td>provision</td>
    </tr>
    <tr>
      <td><code>multi_az_enabled</code></td>
      <td>Boolean</td>
      <td>
        Whether to enable Multi-AZ support for the replication group.
        Only applies when <code>node_count</code> is greater than 1.
        If <code>true</code>, <code>automatic_failover_enabled</code> must also be <code>true</code>.
        <br><br>
        Enabling Multi-AZ and then trying to deactivate the automatic failover causes an error.
      </td>
      <td><code>true</code></td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>automatic_failover_enabled</code></td>
      <td>Boolean</td>
      <td>
        Automatically promote a replica to primary if the existing primary fails.
        Only applies when <code>node_count</code> is greater than 1.
        You can't set this property to <code>false</code> unless you also deactivate Multi-AZ.
        <br><br>
        Enabling automatic failover and then trying to reduce the number of nodes to 1 causes an error.
      </td>
      <td><code>true</code></td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>kms_key_id</code></td>
      <td>String</td>
      <td>The ARN of the key to use if encrypting at rest. Defaults to AWS-managed key.</td>
      <td><code>""</code></td>
      <td>provision</td>
    </tr>
    <tr>
      <td><code>aws_access_key_id</code></td>
      <td>String</td>
      <td>The AWS Access Key to use for an instance</td>
      <td>The value the operator entered for <strong>AWS Access Key</strong> in <%= vars.ops_manager %></td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>aws_secret_access_key</code></td>
      <td>String</td>
      <td>The corresponding secret for the AWS Access Key to use for an instance</td>
      <td>The value the operator entered for <strong>AWS Secret Access Key</strong> in <%= vars.ops_manager %></td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>maintenance_day</code></td>
      <td>String</td>
      <td>
        The preferred maintenance day: <code>Sun</code>, <code>Mon</code>, <code>Tue</code>, <code>Wed</code>, <code>Thu</code>, <code>Fri</code>, or <code>Sat</code>.
        It can only be updated to a non-null value.
      </td>
      <td>Uses AWS default value for the region if all <code>maintenance_*</code> properties are null when creating the instance</td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>maintenance_start_hour</code></td>
      <td>String</td>
      <td>
        The preferred maintenance start hour. Valid values are <code>00</code> through <code>23</code>.
        It can only be updated to a non-null value.
      </td>
      <td>Uses AWS default value for the region if all <code>maintenance_*</code> properties are null when creating the instance</td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>maintenance_start_min</code></td>
      <td>String</td>
      <td>
        The preferred maintenance start minute. Valid values are <code>00</code>, <code>15</code>, <code>30</code>, <code>45</code>.
        It can only be updated to a non-null value.
      </td>
      <td>Uses AWS default value for the region if all <code>maintenance_*</code> properties are null when creating the instance</td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>maintenance_end_hour</code></td>
      <td>String</td>
      <td>
        The preferred maintenance end hour. Valid values are <code>00</code> through <code>23</code>.
        It can only be updated to a non-null value.
        The minimum maintenance window is a 60 minute period.
      </td>
      <td>Uses AWS default value for the region if all <code>maintenance_*</code> properties are null when creating the instance</td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>maintenance_end_min</code></td>
      <td>String</td>
      <td>
        The preferred maintenance end minute. Valid values are <code>00</code>, <code>15</code>, <code>30</code>, <code>45</code>.
        It can only be updated to a non-null value.
        The minimum maintenance window is a 60 minute period.
      </td>
      <td>Uses AWS default value for the region if all <code>maintenance_*</code> properties are null when creating the instance</td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>backup_retention_limit</code></td>
      <td>Integer</td>
      <td>
        Number of days for which ElastiCache retains automatic cache cluster snapshots before deleting them.
        If set to <code>0</code>, backups are deactivated.
      </td>
      <td><code>1</code></td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>final_backup_identifier</code></td>
      <td>String</td>
      <td>
        The name of the final node group (shard) snapshot.
        ElastiCache creates the snapshot from the primary node in the cluster.
        If omitted, no final snapshot is made.
      </td>
      <td><code>null</code></td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>backup_name</code></td>
      <td>String</td>
      <td>
        The name of an existing snapshot to be restored in this new instance.
      </td>
      <td><code>""</code></td>
      <td>provision</td>
    </tr>
    <tr>
      <td><code>backup_start_hour</code></td>
      <td>String</td>
      <td>
        The preferred backup start hour. Valid values are <code>00</code> to <code>23</code>.
        It can only be updated to a non-null value.
      </td>
      <td>
        Uses AWS default value for the region if all <code>backup_*</code> properties are null when
        creating the instance.
      </td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>backup_start_min</code></td>
      <td>String</td>
      <td>
        The preferred backup start minute. Valid values are <code>00</code>, <code>15</code>,
        <code>30</code>, <code>45</code>. It can only be updated to a non-null value.
        The minimum backup window is a 60 minute period.
      </td>
      <td>
        Uses AWS default value for the region if all <code>backup_*</code> properties are null when
        creating the instance.
      </td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>backup_end_hour</code></td>
      <td>String</td>
      <td>
        The preferred backup end hour. Valid values are <code>00</code> to <code>23</code>.
        It can only be updated to a non-null value.
        The minimum backup window is a 60 minute period.
      </td>
      <td>
        Uses AWS default value for the region if all <code>backup_*</code> properties are null when
        creating the instance.
      </td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>backup_end_min</code></td>
      <td>String</td>
      <td>
        The preferred backup end minute. Valid values are <code>00</code>, <code>15</code>,
        <code>30</code>, <code>45</code>. It can only be updated to a non-null value.
      </td>
      <td>
        Uses AWS default value for the region if all <code>backup_*</code> properties are null when
        creating the instance.
      </td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>parameter_group_name</code></td>
      <td>String</td>
      <td>
        Name of the custom parameter group to associate with this instance.
        If left unset, the default parameter group for the specified <code>redis_version</code> is used.<br><br>
        After the parameter is set, make sure that it is updated to an appropriate value when updating
        the <code>redis_version</code>. To set it to the default value, specify the name of the default
        parameter group for the Redis version. For example, <code>default.redis6.x</code>.
        For more information about parameter groups, see the
        <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/ParameterGroups.Redis.html">AWS documentation</a>.
      </td>
      <td><code>""</code></td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>preferred_azs</code></td>
      <td>Array</td>
      <td>
        List of EC2 availability zones in which the nodes are created.
        The first item in the list is the primary node.
        The number of entries must equal <code>node_count</code>.
        After this property is set, <code>node_count</code> cannot be changed.
      </td>
      <td><code>[]</code></td>
      <td>provision</td>
    </tr>
    <tr>
      <td><code>logs_slow_log_enabled</code></td>
      <td>Boolean</td>
      <td>
        Enable the streaming of Redis Slow Log to CloudWatch in JSON format.
        Slow Log is supported for Redis replication groups using v6.0 and later.
        A new CloudWatch log group is created with the name
        <code>/aws/elasticache/cluster/SERVICE-INSTANCE-NAME/slow-log</code>.
        Deleting the instance also deletes the log group and permanently deletes all the archived log
        events associated with it.
      </td>
      <td><code>false</code></td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>logs_slow_log_loggroup_retention_in_days</code></td>
      <td>Number</td>
      <td>
        Specifies the number of days to retain log events in the specified log group.
        If <code>0</code> is specified, the events in the log group are always retained and never
        expire.
        When specifying <code>logs_slow_log_loggroup_retention_in_days</code>,
        set <code>logs_slow_log_enabled</code> as <code>true</code>.
        For more information and the list of valid values, see the
        <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutRetentionPolicy.html#API_PutRetentionPolicy_RequestSyntax">AWS documentation</a>.
      </td>
      <td><code>0</code></td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>logs_slow_log_loggroup_kms_key_id</code></td>
      <td>String</td>
      <td>
        The ARN for the KMS key to encrypt Slow Log CloudWatch logs.
        When specifying <code>logs_slow_log_loggroup_kms_key_id</code>, set
        <code>logs_slow_log_enabled</code> as <code>true</code>.
        If omitted, CloudWatch default encryption applies.
        For information about CloudWatch log data encryption and how to configure a KMS key, see the
        <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/encrypt-log-data-kms.html">AWS documentation</a>.
      </td>
      <td><code>""</code></td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>logs_engine_log_enabled</code></td>
      <td>Boolean</td>
      <td>
        Enable the streaming of Redis Engine Log to CloudWatch in JSON format.
        Engine Log is supported for Redis replication groups using v6.2 and later.
        A new CloudWatch log group is created with the name
        <code>/aws/elasticache/cluster/SERVICE-INSTANCE-NAME/engine-log</code>.
        Deleting the instance also deletes the log group and permanently deletes all the archived log
        events associated with it.
      </td>
      <td><code>false</code></td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>logs_engine_log_loggroup_retention_in_days</code></td>
      <td>Number</td>
      <td>
        Specifies the number of days to retain log events in the specified log group.
        If <code>0</code> is specified, the events in the log group are always retained and never
        expire.
        When specifying <code>logs_engine_log_loggroup_retention_in_days</code>,
        set <code>logs_engine_log_enabled</code> to <code>true</code>.
        For more information and the list of valid values, see the
        <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutRetentionPolicy.html#API_PutRetentionPolicy_RequestSyntax">AWS documentation</a>.
      </td>
      <td><code>0</code></td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>logs_engine_log_loggroup_kms_key_id</code></td>
      <td>String</td>
      <td>
        The ARN for the KMS key to encrypt Engine logs CloudWatch logs.
        When specifying <code>logs_engine_log_loggroup_kms_key_id</code>, set
        <code>logs_engine_log_enabled</code> to <code>true</code>.
        If omitted, CloudWatch default encryption applies.
        For information about CloudWatch log data encryption and how to configure a KMS key, see the
        <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/encrypt-log-data-kms.html">AWS documentation</a>.
      </td>
      <td><code>""</code></td>
      <td>provision and update</td>
    </tr>
  </tbody>
</table>

## <a id="binding"></a> Binding

You can bind a service by running:

```console
cf bind-service APP-NAME SERVICE-INSTANCE --binding-name BINDING-NAME
```

<%= vars.product_short %> returns the Redis AUTH token created at provision time alongside endpoints
information to connect to the service instance.

> **Note** Because the <%= vars.product_short %> configures Redis AUTH as the authentication mechanism,
> all bindings share the same Redis AUTH token. Deleting the binding does not revoke the credentials.

## <a id="binding-creds"></a> Binding Credentials

The format for binding credentials for Redis is as follows:

```json
{
    "name" : "REDIS-CLUSTER-NAME",
    "host" : "REDIS-PRIMARY-ENDPOINT-ADDRESS",
    "password" : "AUTHENTICATION-PASSWORD",
    "tls_port" : "REDIS-TLS-PORT",
    "reader_endpoint" : "REDIS-READER-ENDPOINT-ADDRESS"
}
```

`host` is the primary node endpoint address. This endpoint can be used both for writing and reading.

`reader_endpoint` is the IaaS-recommended endpoint to use for reads whenever eventual consistency is
acceptable.
The reader endpoint evenly splits incoming connections to the endpoint between all read replicas.
For more information, see the
<a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Endpoints.html">AWS documentation</a>.

## <a id="old-plans"></a> Previously Provided Pre-configured Plans

The following table lists the previously provided plans for Amazon ElastiCache for Redis service:

| Plan      | Cache Size         | AWS Cache Node Type | HA  |
|-----------|--------------------|---------------------|-----|
| small     | minimum 1&nbsp;GB  | cache.t2.small      | no  |
| medium    | minimum 4&nbsp;GB  | cache.m5.large      | no  |
| large     | minimum 16&nbsp;GB | cache.r4.xlarge     | no  |
| small-ha  | minimum 1&nbsp;GB  | cache.t2.small      | yes |
| medium-ha | minimum 4&nbsp;GB  | cache.m5.large      | yes |
| large-ha  | minimum 16&nbsp;GB | cache.r4.xlarge     | yes |

To keep these plans in this version of the broker, add them through the tile as custom plans.
For how to configure plans through the tile, see
[Configure Services with <%= vars.product_short %>](../installing-with-aws.html#services).

> **Important** Property `cache_size` is now deprecated.
> Consider replacing it with its equivalent `node_type`. For more information, see
> [Equivalence of cache_size and node_type](#cache-size-node-type).
> Specifying `node_type` in a plan prevents any existing or future service from specifying `node_type`
> as a service-specific configuration parameter.

This has strong implications for existing plans because existing services might become unmanageable
if they specified a custom `node_type` when they were created.

When in doubt, keep using `cache_size` for existing plans and start using `node_type` for any new
plans.

For more information about node types and pricing, see the
[AWS documentation](https://aws.amazon.com/elasticache/pricing/) and
[Choosing your node size](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/nodes-select-size.html).

<%= vars.product_full %> v1.5.0 sets the default values to `true` for `at_rest_encryption_enabled` and
`multi_az_enabled`.
Because previously created instances cannot be modified to use Multi-AZ or encryption at rest, set the
properties `multi_az_enabled` and `at_rest_encryption_enabled` to `false` when replicating the old
plans to match service instances that have already been created.

Add the following block to keep the `small` plan:

```json
{
  "name": "small",
  "id": "ad963fcd-19f7-4b79-8e6d-645756e84f7a",
  "description": "Redis 6.0 with 1GB cache and 1 node.",
  "cache_size": 2,
  "redis_version": "6.0",
  "node_count": 1,
  "at_rest_encryption_enabled": false,
  "multi_az_enabled": false,
  "metadata": {
    "displayName": "Small",
    "bullets": ["Redis 6.0", "1GB Cache", "1 node"]
  }
}
```

Add the following block to keep the `medium` plan:

```json
{
  "name": "medium",
  "id": "df41095a-43e8-4be4-b4d6-ae2d8a35068d",
  "description": "Redis 6.0 with at least 4GB cache and 1 node.",
  "cache_size": 4,
  "redis_version": "6.0",
  "node_count": 1,
  "at_rest_encryption_enabled": false,
  "multi_az_enabled": false,
  "metadata": {
    "displayName": "Medium",
    "bullets": ["Redis 6.0", "4GB Cache", "1 node"]
  }
}
```

Add the following block to keep the `large` plan:

```json
{
  "name": "large",
  "id": "da4dc49c-a64f-4d2a-8490-5e456cbb0577",
  "description": "Redis 6.0 with at least 16 GB cache and 1 node.",
  "cache_size": 16,
  "redis_version": "6.0",
  "node_count": 1,
  "at_rest_encryption_enabled": false,
  "multi_az_enabled": false,
  "metadata": {
    "displayName": "Large",
    "bullets": ["Redis 6.0", "16GB Cache", "1 node"]
  }
}
```


Add the following block to keep the `small-ha` plan:

```json
{
  "name": "small-ha",
  "id": "70544df7-0ac4-4580-ba51-c1fbdd6fdfd0",
  "description": "Redis 6.0 with 1GB cache and 2 nodes.",
  "cache_size": 2,
  "redis_version": "6.0",
  "at_rest_encryption_enabled": false,
  "multi_az_enabled": false,
  "metadata": {
    "displayName": "Small HA",
    "bullets": ["Redis 6.0", "1GB Cache", "2 nodes"]
  }
}
```


Add the following block to keep the `medium-ha` plan:

```json
{
  "name": "medium-ha",
  "id": "a4235008-80f4-4053-924b-defcce17cb63",
  "description": "Redis 6.0 with at least 4GB cache and 2 nodes.",
  "cache_size": 4,
  "redis_version": "6.0",
  "at_rest_encryption_enabled": false,
  "multi_az_enabled": false,
  "metadata": {
    "displayName": "Medium HA",
    "bullets": ["Redis 6.0", "4GB Cache", "2 nodes"]
  }
}
```


Add the following block to keep the `large-ha` plan:

```json
{
  "name": "large-ha",
  "id": "f26cda6f-d4b4-473a-966c-32d238f723ef",
  "description": "Redis 6.0 with at least 16 GB cache and 2 nodes.",
  "cache_size": 16,
  "redis_version": "6.0",
  "at_rest_encryption_enabled": false,
  "multi_az_enabled": false,
  "metadata": {
    "displayName": "Large HA",
    "bullets": ["Redis 6.0", "16GB Cache", "2 nodes"]
  }
}
```

## <a id="cache-size-node-type"></a> Equivalence of cache_size and node_type

Table of equivalents for `cache_size` and `node_type` for the previously pre-configured plans:

| Plan      | Cache Size | Description | AWS Cache Node Type | HA  |
|-----------|-----|--------------------|---------------------|-----|
| small     | 1   | minimum 1&nbsp;GB  | cache.t2.small      | no  |
| medium    | 4   | minimum 4&nbsp;GB  | cache.m5.large      | no  |
| large     | 16  | minimum 16&nbsp;GB | cache.r4.xlarge     | no  |
| small-ha  | 1   | minimum 1&nbsp;GB  | cache.t2.small      | yes |
| medium-ha | 4   | minimum 4&nbsp;GB  | cache.m5.large      | yes |
| large-ha  | 16  | minimum 16&nbsp;GB | cache.r4.xlarge     | yes |

Table of equivalents for `cache_size` and `node_type` not used by any of the previously pre-configured plans:

| Cache Size | AWS Cache Node Type |
|------------|---------------------|
| 2          | cache.t3.medium     |
| 8          | cache.m5.xlarge     |
| 32         | cache.r4.2xlarge    |
| 64         | cache.r4.4xlarge    |
| 128        | cache.r4.8xlarge    |
| 256        | cache.r5.12xlarge   |
