---
title: Amazon Aurora PostgreSQL-Compatible Edition
owner: Cloud Service Broker
---

<strong><%= modified_date %></strong>

This topic gives you reference information about the
[Amazon Aurora MySQL-Compatible Edition](https://aws.amazon.com/rds/aurora/)
(csb-aws-aurora-postgresql) service.
It details the plans, configuration parameters, and binding credentials.

<%= vars.product_full %> v1.3.0 and later does not support unsecured connections to
Amazon Aurora PostgreSQL-Compatible Edition instances when binding or unbinding.
For secure connections to work, you must install the AWS certificate bundle in <%= vars.ops_manager %>.

<p class="note">
  <strong>Note:</strong> PostgreSQL v15 is not yet supported by <%= vars.product_full %>.
  If you create an instance, unbinding and multiple bindings will not work as expected due to
  changes to PostgreSQL v15 user management.
</p>

## <a id="plans-config"></a> Plan Configuration Parameters

When configuring <%= vars.product_short %> you can add additional plans.
For how to configure plans, see
[Configure Services with Cloud Service Broker for AWS](../installing-with-aws.html.md.erb#services).

The following table lists parameters which can only be configured for additional plans:

| Parameter Name         | Values                                                                                | Default   | Required |
|------------------------|---------------------------------------------------------------------------------------|-----------|----------|
| `name`                 | The plan name.                                                                        | _n/a_     | Yes      |
| `id`                   | A unique GUID.                                                                        | _n/a_     | Yes      |
| `description`          | Description of the new plan.                                                          | _n/a_     | Yes      |
| `free`                 | When false, service instances of this service plan have a cost.                       | true      | No       |
| `bindable`             | Specifies whether service instances of the service plan can bind to applications.     | true      | No       |
| `plan_updateable`      | Whether the Plan supports upgrading, downgrading, or sidegrading to another version.  | true      | No       |
| `metadata.displayName` | Name to use when displaying the plan in Marketplace                                   | _n/a_     | No       |
| `metadata.bullets`     | List of bullet points to display in Apps Manager                                      | _n/a_     | No       |

You can also add any of the parameters listed in the [Configuration Parameters](#parameters) section
to your plan.

<p class="note">
  <strong>Note:</strong> If you set a parameter at plan level, developers cannot change the value
  when creating or updating service instances.
</p>

## <a id="parameters"></a> Configuration Parameters

You can provision a service by running:

```console
cf create-service csb-aws-aurora-postgres PLAN-NAME SERVICE-INSTANCE-NAME -c '{"PARAMETER-NAME": "PARAMETER-VALUE"}
```

You can update the configuration parameters for a service instance by running:

```console
cf update-service SERVICE-INSTANCE-NAME -c '{"PARAMETER-NAME": "PARAMETER-VALUE"}'
```

The following table lists the parameters that you can configure, by using the `-c` flag, when
provisioning or updating a `csb-aws-aurora-postgresql` service.
The Operation column displays whether a parameter is supported for both provision and update, or for
provision only:

<table class="nice">
  <thead>
    <tr>
      <th width="20%">Parameter Name</th>
      <th width="10%">Type</th>
      <th width="40%">Description</th>
      <th width="20%">Default</th>
      <th width="10%">Operation</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code>engine_version</code></td>
      <td>String</td>
      <td>
        This parameter is required.
        The Aurora PostgreSQL engine version, such as <code>14.4</code>. Some versions do not support some features.
        PostgreSQL 15 is not supported.
        For more information, see the <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraPostgreSQL.Updates.20180305.html">AWS documentation</a>.
      </td>
      <td>None</td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>instance_name</code></td>
      <td>String</td>
      <td>The name of the AWS instance to create.</td>
      <td><code>csb-aurorapg-INSTANCE-ID</code></td>
      <td>provision</td>
    </tr>
    <tr>
      <td><code>cluster_instances</code></td>
      <td>Integer</td>
      <td>The number of Aurora instances in the Aurora cluster.</td>
      <td><code>3</code></td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>db_name</code></td>
      <td>String</td>
      <td>The name of the database.</td>
      <td><code>csbdb</code></td>
      <td>provision</td>
    </tr>
    <tr>
      <td><code>region</code></td>
      <td>String</td>
      <td>
        The AWS region to deploy the service in.
        For more information about available regions, see the
        <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html#concepts-available-regions">AWS documentation</a>.
      </td>
      <td><code>us-west-2</code></td>
      <td>provision</td>
    </tr>
    <tr>
      <td><code>serverless_min_capacity</code></td>
      <td>Number</td>
      <td>
        The minimum capacity for the cluster. Must be less than or equal to <code>serverless_max_capacity</code>.
        Valid capacity values are in a range of 0.5 up to 128, in steps of 0.5.
        The <code>serverless_min_capacity</code> and <code>serverless_max_capacity</code> properties
        are ineffective without setting the <code>instance_class</code> property to a valid value for
        Aurora Serverless v2.
        For information about restrictions associated with the different types of instances accepted
        by Aurora, see the <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Concepts.DBInstanceClass.html">AWS documentation</a>.
        Currently, <code>db.serverless</code> is the special database instance class that
        Aurora Serverless v2 uses.
      </td>
      <td><code>null</code></td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>serverless_max_capacity</code></td>
      <td>Number</td>
      <td>
        The maximum capacity for the cluster. Must be greater than or equal to <code>serverless_min_capacity</code>.
        Valid capacity values are in a range of 0.5 up to 128, in steps of 0.5.
        The <code>serverless_min_capacity</code> and <code>serverless_max_capacity</code> properties
        are ineffective without setting the <code>instance_class</code> property to a valid value for
        Aurora Serverless v2.
        For information about restrictions associated with the different types of instances accepted
        by Aurora, see the <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Concepts.DBInstanceClass.html">AWS documentation</a>.
        Currently, <code>db.serverless</code> is the special database instance class that
        Aurora Serverless v2 uses.
      </td>
      <td><code>null</code></td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>rds_subnet_group</code></td>
      <td>String</td>
       <td>The name of the subnet to attach the database instance to.</td>
      <td>None</td>
      <td>provision</td>
    </tr>
    <tr>
      <td><code>rds_vpc_security_group_ids</code></td>
      <td>Comma-separated String</td>
      <td>Security group IDs to assign to the database instance.</td>
      <td>None</td>
      <td>provision</td>
    </tr>
    <tr>
      <td><code>allow_major_version_upgrade</code></td>
      <td>Boolean</td>
      <td>Indicates that major version upgrades are allowed.
        Changing this parameter does not cause an outage and the change is
        asynchronously applied as soon as possible.</td>
      <td><code>true</code></td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>auto_minor_version_upgrade</code></td>
      <td>Boolean</td>
      <td>Indicates that minor engine upgrades are applied automatically
        to the database instance during the maintenance window.</td>
      <td><code>true</code></td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>deletion_protection</code></td>
      <td>Boolean</td>
      <td>
        Whether deletion protection is enabled. You cannot delete the database cluster when this value is set,
        but you can delete database instances within the cluster.
        For more information about deleting Aurora database cluster and database instances,
        see the <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_DeleteCluster.html#USER_DeletionProtection">AWS documentation</a>.
        For more information about storage reliability, see the <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Overview.StorageReliability.html">AWS documentation</a>.
        <p class="note">
          <strong>Note:</strong> If the protection is active and a deprovision operation is performed, all
          instances associated with the cluster are erased.
          This leaves the system without computing capacity, and the service will stop.
          The data remains safe because it is associated with the virtual volume associated with the cluster.
          To recover the computing capacity after an accidental deprovision operation,
          set the number of instances that you want for the cluster through the property
          <code>cluster_instances</code>.
        </p>
      </td>
      <td><code>false</code></td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>db_cluster_parameter_group_name</code></td>
      <td>String</td>
      <td>
        The Aurora PostgreSQL database cluster parameter group name for the service.
        By default, a database cluster parameter group is created and used to apply security settings.
        If you set a custom database cluster parameter group, it might override other settings, including security settings.
      </td>
      <td><code>""</code></td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>require_ssl</code></td>
      <td>Boolean</td>
      <td>
        Set to <code>true</code> to only allow secure database connections.
        If you specify <code>db_cluster_parameter_group_name</code>, the <code>require_ssl</code>
        parameter does not take effect.
      </td>
      <td><code>true</code></td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>monitoring_interval</code></td>
      <td>Integer</td>
      <td>
        The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the database instance.
        To stop collecting Enhanced Monitoring metrics, enter <code>0</code>. Valid values: <code>0</code>, <code>1</code>, <code>5</code>, <code>10</code>, <code>15</code>, <code>30</code>, <code>60</code>.
        A <code>monitoring_role_arn</code> value is required if you enter a <code>monitoring_interval</code> value other than <code>0</code>.
      </td>
      <td><code>0</code></td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>monitoring_role_arn</code></td>
      <td>String</td>
      <td>
        Enhanced Monitoring requires permission to act on your behalf to send OS metric information to CloudWatch Logs.
        This property represents the Amazon Resource Names (ARN) for the Identity and Access Management
        (IAM) role that permits RDS to send Enhanced Monitoring metrics to CloudWatch Logs.
      </td>
      <td><code>""</code></td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>performance_insights_enabled</code></td>
      <td>Boolean</td>
      <td>
        Specifies whether Performance Insights are enabled.
        Performance Insights expand on existing Amazon RDS monitoring features to illustrate your
        database performance and help you analyze it.
        From the Performance Insights dashboard you can visualize the database load on your
        Amazon RDS database instance load and filter the load by wait types,
        SQL statements, hosts, or users.
      </td>
      <td><code>false</code></td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>performance_insights_kms_key_id</code></td>
      <td>String</td>
      <td>
        The ARN for the KMS key to encrypt Performance Insights data.
        When specifying <code>performance_insights_kms_key_id</code>, set <code>performance_insights_enabled</code> as <code>true</code>.
        After the KMS key is set, it can never be changed.
      </td>
      <td><code>""</code></td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>performance_insights_retention_period</code></td>
      <td>Integer</td>
      <td>
        The number of days for which to retain Performance Insights data.<br><br>
        The value must be <code>7</code>, <code>NUMBER-OF-MONTHS</code> * 31 (where <code>NUMBER-OF-MONTHS</code> is <code>1</code>-<code>23</code>), or <code>731</code>.<br>
        For example, the following values are valid: <code>93</code> (because it's 3 months * 31),
        <code>341</code> (because it's 11 months * 31), <code>589</code> (because it's 19 months * 31),
        and <code>731</code>.<br><br>
        If you specify an invalid retention period, such as <code>94</code>, RDS issues an error.
      </td>
      <td><code>7</code></td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>instance_class</code></td>
      <td>String</td>
      <td>
        This parameter is required.
        The database instance class determines the computation and memory capacity of an
        Amazon Aurora database instance.
        For information about the restrictions associated with the different types of instances
        accepted by Aurora, see the <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Concepts.DBInstanceClass.html">AWS documentation</a>.
      </td>
      <td>None</td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>preferred_maintenance_day</code></td>
      <td>String</td>
      <td>
        The preferred maintenance day: <code>Sun</code>, <code>Mon</code>, <code>Tue</code>,
        <code>Wed</code>, <code>Thu</code>, <code>Fri</code>, or <code>Sat</code>.
        It can only be updated to a non-null value.
        <%= partial vars.path_to_partials + '/csb-aws/note-maintenance-window' %>
      </td>
      <td>
        Uses AWS default value for the region if all <code>preferred_maintenance_*</code> properties
        are null when creating the instance.
      </td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>preferred_maintenance_start_hour</code></td>
      <td>String</td>
      <td>
        The preferred maintenance start hour. Valid values are <code>00</code> through <code>23</code>.
        It can only be updated to a non-null value.
        <%= partial vars.path_to_partials + '/csb-aws/note-maintenance-window' %>
      </td>
      <td>
        Uses AWS default value for the region if all <code>preferred_maintenance_*</code> properties
        are null when creating the instance.
      </td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>preferred_maintenance_start_min</code></td>
      <td>String</td>
      <td>
        The preferred maintenance start minute. Valid values are <code>00</code>, <code>15</code>,
        <code>30</code>, <code>45</code>.
        It can only be updated to a non-null value.
        <%= partial vars.path_to_partials + '/csb-aws/note-maintenance-window' %>
      </td>
      <td>
        Uses AWS default value for the region if all <code>preferred_maintenance_*</code> properties
        are null when creating the instance.
      </td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>preferred_maintenance_end_hour</code></td>
      <td>String</td>
      <td>
        The preferred maintenance end hour. Valid values are <code>00</code> through <code>23</code>.
        It can only be updated to a non-null value.
        <%= partial vars.path_to_partials + '/csb-aws/note-maintenance-window' %>
      </td>
      <td>
        Uses AWS default value for the region if all <code>preferred_maintenance_*</code> properties
        are null when creating the instance.
      </td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>preferred_maintenance_end_min</code></td>
      <td>String</td>
      <td>
        The preferred maintenance end minute. Valid values are <code>00</code>, <code>15</code>,
        <code>30</code>, <code>45</code>.
        It can only be updated to a non-null value.
        <%= partial vars.path_to_partials + '/csb-aws/note-maintenance-window' %>
      </td>
      <td>
        Uses AWS default value for the region if all <code>preferred_maintenance_*</code> properties
        are null when creating the instance.
      </td>
      <td>provision and update</td>
    </tr>
    <tr>
        <td><code>storage_encrypted</code></td>
        <td>Boolean</td>
        <td>
          Specifies whether a database cluster is encrypted.
          For more information about database cluster encryption, see the
          <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Overview.Encryption.html#Overview.Encryption.Enabling">AWS documentation</a>.
        </td>
        <td><code>true</code></td>
        <td>provision</td>
    </tr>
    <tr>
        <td><code>kms_key_id</code></td>
        <td>String</td>
        <td>
          The ARN for the user-managed KMS encryption key.
          When setting this value, <code>storage_encrypted</code> must be enabled.
          When not set, the AWS-managed key is used for encrypting the database.
        </td>
        <td><code>""</code></td>
        <td>provision</td>
    </tr>
    <tr>
        <td><code>aws_vpc_id</code></td>
        <td>String</td>
        <td>The Virtual Private Cloud (VPC) to connect the instance to</td>
        <td>The default VPC</td>
        <td>provision and update</td>
    </tr>
    <tr>
        <td><code>copy_tags_to_snapshot</code></td>
        <td>Boolean</td>
        <td>Copy all instance tags to snapshots</td>
        <td><code>true</code></td>
        <td>provision and update</td>
    </tr>
    <tr>
        <td><code>preferred_backup_window</code></td>
        <td>String</td>
        <td>
          The daily time range in UTC during which automated backups are created. For example,
          <code>09:46-10:16</code>.
          It must not overlap with the maintenance window. If not set, it uses the default for the
          region. For more information, see the
          <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.Backups.BackupWindow">AWS documentation</a>.
        </td>
        <td><code>null</code></td>
        <td>provision and update</td>
    </tr>
    <tr>
      <td><code>backup_retention_period</code></td>
      <td>Integer</td>
      <td>
        The number of days for which automatic backups are kept.
        Set the value to <code>0</code> to deactivate automated backups. An outage
        occurs if you change the backup retention period from <code>0</code> to
        a nonzero value or the reverse.
      </td>
      <td><code>1</code></td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>aws_access_key_id</code></td>
      <td>String</td>
      <td>The AWS Access Key to use for an instance.</td>
      <td>The value the operator entered for <strong>AWS Access Key</strong> in <%= vars.ops_manager %>.</td>
      <td>provision and update</td>
    </tr>
    <tr>
      <td><code>aws_secret_access_key</code></td>
      <td>String</td>
      <td>The corresponding secret for the AWS Access Key to use for an instance.</td>
      <td>The value the operator entered for <strong>AWS Secret Access Key</strong> in <%= vars.ops_manager %>.</td>
      <td>provision and update</td>
    </tr>
  </tbody>
</table>

## <a id="binding"></a> Binding

You can bind a service by running:

```console
cf bind-service APP-NAME SERVICE-INSTANCE-NAME --binding-name BINDING-NAME
```

The following table lists the parameters that you can configure, by using the `-c` flag, when
binding a `csb-aws-aurora-postgresql` service:

<table class="nice">
  <thead>
    <tr>
      <th width="20%">Parameter Name</th>
      <th width="10%">Type</th>
      <th width="40%">Description</th>
      <th width="20%">Default</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code>reader_endpoint</code></td>
      <td>Boolean</td>
      <td>
        Whether to return the Aurora reader endpoint, which is balanced across Reader and Writer instances.
        By default the writer endpoint is returned, which maps only to the Writer instance. </td>
      <td><code>false</code></td>
    </tr>
  </tbody>
</table>

## <a id="binding-creds"></a> Binding Credentials

The format for binding credentials for Amazon Aurora PostgreSQL-Compatible Edition is as follows:

```json
{
    "name" : "DATABASE-NAME",
    "hostname" : "DATABASE-SERVER-HOST",
    "port" : "DATABASE-SERVER-PORT",
    "username" : "AUTHENTICATION-USERNAME",
    "password" : "AUTHENTICATION-PASSWORD",
    "uri" : "DATABASE-CONNECTION-URI",
    "jdbcUrl" : "JDBC-FORMAT-CONNECTION-URL"
}
```
