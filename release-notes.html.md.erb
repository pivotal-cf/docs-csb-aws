---
title: Release Notes for Cloud Service Broker for AWS
owner: Cloud Service Broker
---

<strong><%= modified_date %></strong>

These are release notes for <%= vars.product_full %>.

## <a id="1-3-0"></a> v1.3.0

**Release Date:** MMM DD, YYYY

### Breaking Changes

This release has the following breaking changes:

- **Amazon RDS MySQL service:**

  - **The default storage type is now set as `io1` (provisioned IOPS SSD):**
    Previously the default used `gp2` (general purpose SSD).
    Users who previously had custom plans must add the property `"storage_type":"gp2"` to the plan
    definition to ensure that the storage type is not amended on any update.
    As part of this work, the default storage size has also been increased to 100&nbsp;GB, because this
    is the smallest amount of storage that the `io1` storage type supports.
    For more information, see [Changing custom plans](upgrading.html.md.erb#rds-mysql-custom-plans).

### Features

New features and changes in this release:

**Amazon RDS MySQL service:**

- **MySQL version is no longer restricted:**
  Previously the parameter `mysql_version` was restricted to a list of supported values.
  You can now choose the version you want when creating a plan.
  To view the supported versions, see the
  [AWS documentation](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/MySQL.Concepts.VersionMgmt.html#MySQL.Concepts.VersionMgmt.Supported).

- **The default maintenance window can be set easier:** The maintenance window can now be set to to null to
  allow AWS to select a default window. Previously these properties used default string values to determine
  whether the final value of the maintenance window must be configured or not.
  These properties are now null to make code easier to read and maintain long-term.
  The maintenance window configuration uses a AWS default value for the region if all maintenance_* properties
  are null when creating the instance.

- **Exposed automated backups:**
  Automated backups can now be scheduled through `backup_window`.
  The `backup_window` configuration uses a AWS default value for the region if the value is null when provisioning the instance.
  By default, automated backups are disabled. This feature can be customized through the
  following properties:

  - `delete_automated_backups`: Delete backups when deleting the instance. It defaults as `true`.
  - `copy_tags_to_snapshot`: Copy all instance tags to snapshots. It defaults as `true`.
  - `backup_retention_period`: The number of days (1-35) for which automatic backups are kept.
    Set the value to `0` to disable automated backups.

- **`db_name` property can no longer be updated:**
  Updating the `db_name` property causes a destructive action because Terraform recreates the
  database. This change fails the update quickly for improved user experience.

- **`deletion_protection` can be configured and updated:**
  New added property that enables you to configure the deletion protection for the MySQL database
  in both the provisioning and the updating phase of the instance. By default the protection is
  disabled.

- **`storage_type` and `iops` can be configured and updated:**
  New added property that enables you to configure the storage type in both the provisioning and
  the updating phase of the instance.
  In addition, if using the provisioned IOPS SSD (io1) storage type, then the `iops` value
  can also be defined through the property `iops`. The default `storage_type` is `io1` if none is
  defined.

- **Added deprecation warning to `cores` property:**
  The `cores` property is now deprecated and optional if you use the `instance_class` property.
  `cores` is a translation layer to the `instance_class` property.
  The database instance class determines the computation and memory capacity of an Amazon RDS
  database instance.
  The database instance class you need depends on your processing power and memory requirements.
  Use `instance_class` to adjust the database instance to your requirements.

  - **`subsume` property has been removed from the plans:** The previously available property has been removed due
    to the functionality not working. By removing this property, we avoid possible confusion about faulty functionality.
    The old custom plans need to be changed. For more information, see [Changing custom plans](upgrading.html.md.erb#rds-mysql-custom-plans).

  - **Exposed DB option group association:** A DB option group can now be associated through `option_group_name`.
    MySQL offers additional features such as the audit plugin or Memcached to manage data and database or to provide
    additional security for the database. RDS uses option groups to enable and configure these features.

### Resolved Issues

This release has the following fixes:

- **Run-in heading:** Description

### Known Issues

This release has the following issue:

- **Run-in heading:** Description

## <a id="view"></a> View release notes for another version

To view the release notes for another product version, select the version from drop-down menu at the
top of this page.
