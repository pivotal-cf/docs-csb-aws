---
title: Release Notes for Cloud Service Broker for AWS
owner: Cloud Service Broker
---

<strong><%= modified_date %></strong>

This topic describes the changes in this minor release of <%= vars.product_full %>.

## <a id="1-7-0"></a> v1.7.0

**Release date:** DD MMM YYYY

### Breaking changes

This release has the following breaking changes:


### Features

New features and changes in this release:

#### Amazon RDS for MSSQL

- **Amazon RDS for MSSQL is generally available:**
  The Amazon RDS for MSSQL service is no longer in beta and can be used in production.

- **Database encryption:**
  By default, all new MSSQL instances are encrypted with an AWS managed encryption key. Alternatively, it's possible to
  provide a custom Key Management Service (KMS) encryption key Amazon Resource Name (ARN), or to deactivate encryption altogether.
  For more details about encrypting a database instance, see the [AWS documentation](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.Encryption.html#Overview.Encryption.Enabling).
  Do not confuse this with [Transparent Data Encryption
  (TDE)](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Appendix.SQLServer.Options.TDE.html)
  in the AWS documentation.

- **Storage autoscaling:** By default, all new MSSQL instances are created with
  storage autoscaling deactivated. Alternatively, it's possible to enable it by
  setting `max_allocated_storage` to a value greater than `storage_gb` at
  creation time or by updating the instance. For more information, see [Managing
  capacity automatically with Amazon RDS storage
  autoscaling](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PIOPS.StorageTypes.html#USER_PIOPS.Autoscaling)
  in the AWS documentation.

- **Storage type and IOPS:**
  By default, all new MSSQL instances use io1 with up to 3000 operations per second (IOPS).
  Alternatively, it's possible to specify different storage type and IOPS at creation time or edit them after creation.
  For more information, see [Amazon RDS DB instance
  storage](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Storage.html)
  in the AWS documentation.

  - **Deletion protection:**
  By default, all new MSSQL instances are created with deletion protection deactivated.
  Alternatively, it's possible to enable deletion protection at creation time or by updating the instance.

  - **Publicly accessible:**
  By default, all new MSSQL instances are created with `publicly_accessible: false` for increased security.
  Alternatively, it's possible to set `publicly_accessible: true` at creation time or by updating the instance.
  Note that setting `publicly_accessible: true` is not sufficient for making the database instance public.
  For more information, see [Unreachable publicly accessible database](troubleshooting.html#publicly-accessible-unreachable).

  - **Option group:** An existing database option group can now be associated
  through `option_group_name`. MSSQL offers additional features such as SQL
  Server Audit, Transparent Data Encryption, and so on, which are configured by
  using an option group. Setting `option_group_name: ""` during an update is
  ignored. If you want to replace the current option group with the default one,
  you need to explicitly specify its name. For more information, see [Amazon RDS
  options for the Microsoft SQL Server database
  engine](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Appendix.SQLServer.Options.html)
  in the AWS documentation.

  - **Enhanced monitoring:**
  By default, all new MSSQL instances are created with enhanced monitoring deactivated.
  Alternatively, it's possible to activate it by specifying a `monitoring_interval` and a `monitoring_role_arn` at creation time or by updating the instance.
  With Enhanced Monitoring, you can monitor the operating system of your database instance in real time and see how different processes or threads use the CPU.
  For more information, see: [Amazon RDS Monitoring OS metrics with Enhanced
  Monitoring](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Monitoring.OS.html)
  in the AWS documentation.

  - **Exposed Automated Backups:**
  By default, all new MSSQL instances are created with automatic backups enabled.
  Alternatively, it's possible to deactivate them, change the backup window, retention period, etc.
  For more information, see: [Amazon RDS Working with
  backups](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_WorkingWithAutomatedBackups.html)
  in the AWS documentation
  and [Configuration Parameters](reference/aws-mssql.html#parameters).

  - **Parameter group:**
  An existing database parameter group can now be associated through `parameter_group_name`.
  If left unset, a new parameter group is created automatically with containment enabled.
  When specifying a custom parameter group, the custom parameter group must have `contained database authentication` set to `1`.
  Setting `parameter_group_name: ""` during an update is ignored. If you want to replace the current parameter group with the default one, you need to explicitly specify its name.
  For more information, see [Amazon RDS Working with parameter groups](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_WorkingWithParamGroups.html).

  - **Exposed `allow_major_version_upgrade`:**
  By default, major version upgrades are allowed when creating an MSSQL instance.
  This property is a flag that allows you to perform or block the upgrade to major versions.
  For more information, see the [Configuration Parameters](reference/aws-mssql.html#parameters).

  - **Exposed `auto_minor_version_upgrade`:**
  By default, CSB enables <strong>auto</strong> upgrades automatically during the maintenance window.
  If <code>auto_minor_version_upgrade</code> is enabled, you must specify a major engine version.
  For more information about how to obtain available major versions, see
  the [Configuration Parameters](reference/aws-mssql.html#parameters).

  - **Exposed maintenance window configuration:**
  You can now specify the weekly time range for when maintenance on the mssql instance is performed.
  The minimum maintenance window is a 60-minute period.
  For more information, see
  [Configuration Parameters](reference/aws-mssql.html.md.erb#parameters).

- **Exposed Performance Insights:**
  You can enable Performance insights to expand on existing Amazon RDS monitoring features to
  illustrate the database performance and help you analyze it.
  By default, Performance Insights is deactivated. To enable this feature, configure these properties:

  - `performance_insights_enabled`: Specifies whether the Performance Insights feature is enabled.
    It is `false` by default.
    For more information, see the [Configuration Parameters](reference/aws-mssql.html#parameters).

  - `performance_insights_kms_key_id`: The ARN for the KMS key to encrypt Performance Insights data.
    When specifying `performance_insights_kms_key_id`, you must set `performance_insights_enabled` as
    `true`. After the KMS key is set, it can never be changed.
    For more information, see the [Configuration Parameters](reference/aws-mssql.html#parameters).

  - `performance_insights_retention_period`: The number of days to retain Performance Insights data.
    When specifying `performance_insights_retention_period`, you must set `performance_insights_enabled` as `true`.
    The following values are valid: 7, MONTHS * 31 (where MONTHS is a number of months from 1-23) and, 731.
    For more information, see the [Configuration Parameters](reference/aws-mssql.html#parameters).

- **Exposed the server's character set:**
  The default server collation when you create the database instance.
  This cannot be modified, but apps can specify a different collation at table or column level.
  For more information, see the [AWS documentation](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Appendix.SQLServer.CommonDBATasks.Collation.html).

- **Exposed Multi-AZ:**
  Allows you to activate or deactivate Multi-AZ using either SQL Server Database Mirroring (DBM) or
  Always On Availability Groups (AGs) depending on the chosen SQL Server version.
  For Multi-AZ to work correctly, your security group must be configured to allow
  UDP and TCP traffic for port 3343.
  For more information, see [Multi-AZ instance ports requirement](https://aws.amazon.com/rds/sqlserver/faqs/#Multi-AZ_instance_ports_requirement) and
  [Multi-AZ deployments for Amazon RDS for Microsoft SQL Server](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_SQLServerMultiAZ.html) in the AWS documentation.


- **Enabling `agent` logging for your RDS for MSSQL database instance:**
  You can now enable `agent` logging by setting the property `enable_export_agent_logs`.
  By default, `agent` logging is deactivated.
  When activated, the default number of log retention days is 30.
  For how to configure, see [Configuration Parameters](reference/aws-mssql.html#parameters).

- **Enabling `error` logging for your RDS for MSSQL database instance:**
  You can now enable `error` logging by setting the property `enable_export_error_logs`.
  By default, `error` logging is deactivated.
  When activated, the default number of log retention days is 30.
  For how to configure, see [Configuration Parameters](reference/aws-mssql.html#parameters).

- **Encrypting CloudWatch logs:**
  A new property, `cloudwatch_log_groups_kms_key_id`, is exposed and enables you to configure your
  AWS KMS customer-managed key to encrypt the logs generated when activating `agent` or `error` logs.
  For more information, see [Configuration Parameters](reference/aws-mssql.html#parameters).

- **Server rejects non-SSL connections by default:**
  The `require_ssl` property is `true` by default, which makes the server require SSL connections.
  When `false`, the server accepts SSL and non-SSL connections.
  If `parameter_group_name` is specified then, the `require_ssl` parameter does not take effect.

- **Bind and unbind are now performed over TLS:**
  For these operations to work, you must install the AWS certificate bundle in
  Tanzu Operations Manager.

- **MSSQL JDBC URL SSL parameter:**
  RDS for MSSQL configures the JDBC URL depending on the `require_ssl`.
  When enabling `require_ssl`, the next parameters are configured as follows:
    * `encrypt`: `true`
    * `trustServerCertificate`: `false`
    * `hostNameInCertificate`:  Common Name (CN) or DNS name in the Subject Alternate Name (SAN) in the server certificate.
  When deactivating `require_ssl`, `encrypt` is set as `false`.

#### General

- **The **<% vars.product_full%> tile now requires Jammy Stemcell**:
  The tile depends now on Jammy Stemcells instead of Xenial. You will need to have a Jammy Stemcell available in Ops Manager.
  This change also implies Ops Manager needs to be at version v2.10.33 or later.


### Resolved issues

This release has the following fixes:



### Known issues



## <a id="view"></a> View release notes for another version

To view the release notes for another product version, select the version from drop-down menu at the
top of this page.
