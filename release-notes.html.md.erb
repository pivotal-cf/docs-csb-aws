---
title: Release Notes for Cloud Service Broker for AWS
owner: Cloud Service Broker
---

<strong><%= modified_date %></strong>

These are release notes for <%= vars.product_full %>.

## <a id="1-3-0"></a> v1.3.0

**Release Date:** MMM DD, YYYY

### Breaking Changes

This release has the following breaking changes:

- **Amazon RDS MySQL service:**

  - **The default storage type is now set as `io1` (provisioned IOPS SSD):**
    Previously the default used `gp2` (general purpose SSD).
    Users who previously had custom plans must add the property `"storage_type":"gp2"` to the plan
    definition to ensure that the storage type is not amended on any update.
    As part of this work, the default storage size has also been increased to 100&nbsp;GB, because this
    is the smallest amount of storage that the `io1` storage type supports.
    For more information, see [Changing custom plans](upgrading.html.md.erb#rds-mysql-custom-plans).

### Features

New features and changes in this release:

**Amazon RDS MySQL service:**

- **MySQL version is no longer restricted:**
  Previously the parameter `mysql_version` was restricted to a list of supported values.
  You can now choose the version you want when creating a plan.
  To view the supported versions, see the
  [AWS documentation](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/MySQL.Concepts.VersionMgmt.html#MySQL.Concepts.VersionMgmt.Supported).

- **The default maintenance window can be set more easily:**
  To use the AWS default maintenance window when provisioning, the properties related to the
  maintenance window can all be set to null instead of empty strings.

- **Exposed automated backups:**
  Automated backups can now be scheduled through `backup_window`.
  The `backup_window` configuration uses a AWS default value for the region if the value is null when
  provisioning the instance.
  By default, automated backups are enabled. This feature can be customized through the following
  properties:

  - `delete_automated_backups`: Delete backups when deleting the instance. It is `true` by default.
  - `copy_tags_to_snapshot`: Copy all instance tags to snapshots. It is `true` by default.
  - `backup_retention_period`: The number of days (1-35) for which automatic backups are kept.
    Set the value to `0` to disable automated backups. It is `7` by default.

- **`db_name` property can no longer be updated:**
  Updating the `db_name` property causes a destructive action because Terraform recreates the
  database. This change fails the update quickly for improved user experience.

- **`deletion_protection` can be configured and updated:**
  New added property that enables you to configure the deletion protection for the MySQL database
  in both the provisioning and the updating phase of the instance. By default the protection is
  disabled.

- **`storage_type` and `iops` can be configured and updated:**
  New added property that enables you to configure the storage type in both the provisioning and
  the updating phase of the instance.
  In addition, if using the provisioned IOPS SSD (io1) storage type, then the `iops` value
  can also be defined through the property `iops`. The default `storage_type` is `io1` if none is
  defined.

- **Added deprecation warning to `cores` property:**
  The `cores` property is now deprecated and optional if you use the `instance_class` property.
  `cores` is a translation layer to the `instance_class` property.
  The database instance class determines the computation and memory capacity of an Amazon RDS
  database instance.
  The database instance class you need depends on your processing power and memory requirements.
  Use `instance_class` to adjust the database instance to your requirements.

- **`subsume` property was removed from the plans:**
  The `subsume` property wasn't working and was removed to prevent confusion.
  The old custom plans must be changed. For more information, see [Changing custom plans](upgrading.html.md.erb#rds-mysql-custom-plans).

- **Exposed database option group association:**
  A database option group can now be associated through `option_group_name`.
  MySQL offers additional features, such as the audit plug-in or Memcached to manage data and the
  database or to provide additional security for the database.
  RDS uses option groups to enable and configure these features.

- **Exposed Enhanced Monitoring:** Enhanced monitoring can now be enabled to enable all the system metrics and
  process information for the RDS DB instances on the console.
  By default, enhanced monitoring is disabled. To enable this feature, you have to configure the following properties:

  - `monitoring_interval`: The interval, in seconds, between points when Enhanced Monitoring metrics are collected for
    the DB instance. To disable collecting Enhanced Monitoring metrics, specify 0.
    Valid Values: 0, 1, 5, 10, 15, 30, 60. It defaults as 0.
    A `monitoring_role_arn` value is required if you specify a `monitoring_interval` value other than 0.
  - `monitoring_role_arn`: Enhanced Monitoring requires permission to act on your behalf to send OS metric information
    to CloudWatch Logs. This property represents the ARN for the IAM role that permits RDS to send enhanced monitoring
    metrics to CloudWatch Logs.

- **Exposed Performance Insights:** Performance insights can now be enabled to expand on existing Amazon RDS monitoring
  features to illustrate and help you analyze your database performance.
  By default, performance insights is disabled. To enable this feature, you have to configure the following properties:

  - `performance_insights_enabled`: Specifies whether Performance Insights are enabled. It defaults as `false`.
  - `performance_insights_kms_key_id`: The ARN for the KMS key to encrypt Performance Insights data.
    When specifying `performance_insights_kms_key_id`, `performance_insights_enabled` needs to be set to true.
    Once KMS key is set, it can never be changed.

**Amazon Aurora MySQL-Compatible Edition and Amazon Aurora PostgreSQL-Compatible Edition services:**

- **The Amazon Aurora MySQL-Compatible Edition and Amazon Aurora PostgreSQL-Compatible Edition services have been added:**
  See the reference documentation for information about how to create and manage these services.

### Resolved Issues

This release has the following fixes:

- **Run-in heading:** Description

### Known Issues

This release has the following issue:

- **Run-in heading:** Description

## <a id="view"></a> View release notes for another version

To view the release notes for another product version, select the version from drop-down menu at the
top of this page.
