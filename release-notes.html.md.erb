---
title: Release Notes for Cloud Service Broker for AWS
owner: Cloud Service Broker
---

<strong><%= modified_date %></strong>

These are release notes for <%= vars.product_full %>.

##<a id="1-2-0"></a> v1.2.0

**Release Date:** MONTH DAY, 2022

### Breaking Changes

This release has the following breaking change:

* **Amazon S3 and RDS Postgres pre-configured plans have been removed**: From this version onwards, plans are no longer provided with the brokerpak.
If you have S3 or RDS Postgres service instances that you want to maintain which were using build-in plans, previously provided plans must be added
through the tile configuration. For more information, see [Add S3 previously provided pre-configured plans](reference/aws-s3.html.md.erb#old-plans) and [Add RSD Postgres previously provided pre-configured plans](reference/aws-postgres.html.md.erb#old-plans).
* **RDS PostgreSQL new default storage type**: The default storage type is now set as 'io1' (provisioned IOPS SSD). Previously the default used 'gp2' (general purpose SSD). Users who previously had custom plans should add the property `"storage_type":"gp2"` to the plan definition, to ensure the storage type is not amended on any update. See [upgrade page](upgrading.html.md.erb#rds-postgres-custom-plans) for more details. 


### Features

New features and changes in this release:

* **Amazon S3 bucket service offering is generally available:** The Amazon S3 bucket offering is no longer in beta and can be used in production. As part of this the following S3 features were introduced: 
    * **ACL can now be a user input:** ACL can now be specified on creation of service instance if the plan does not specify a value for it. Previously it was a plan-only input and as such could only be specified in the plan definition.
    * **Exposed Bucket Ownership controlls:** Bucket Ownership controls can now be specified in a plan or on service instance creation if the plan does not specify a value for it. It defaults to `ObjectOwnershipEnforced` and this disables ACLs by default. If you have custom plans refer to the [upgrading instructions](upgrading.html.md.erb#s3-custom-plans) for information regarding this change.
    * **Blocking public access to Amazon S3 storage:** This feature provides settings for buckets to help manage public access to Amazon S3 resources. S3 Block Public Access settings override policies and permissions so that it is possible to limit public access to these resources.
    * **Server Side encryption can now be enabled and configured:** This feature provides settings for configuring encryption of data in an S3 bucket.
    * **Allow enabling Object Lock:** This feature allows storing objects using a write-once-read-many (WORM) model. Object Lock can help prevent objects from being deleted or overwritten for a fixed amount of time.
    * **Allow versioning updates:** Added the ability to modify the versioning of an S3 bucket, to enable such functionality after its creation. Once versioning is enabled, it can no longer be disabled as the IaaS will throw an error.
* **Amazon RDS Postgres service offering is generally available:** The Amazon RDS Postgres offering is no longer in beta and can be used in production.
    * When creating a binding, by default the PostgreSQL connection will be secured via the `verify-full` PostgreSQL configuration. This will require the AWS certificate bundle to be installed, or it can be disabled by setting `require_ssl=false`.
    * A new "provider_verify_certificate" property allows for the PostgreSQL Terraform provider to skip the verification of the server certificate.
    * **Allow enforcing SSL:** Introduced `require_ssl` to replace `use_tls`. When the `require_ssl` property is true, it will enforce the server to require SSL connections. When `false` (default), the server will accept SSL and non-SSL connections.
    * **Exposed Enhanced Monitoring:** Amazon RDS provides metrics in real time for the operating system (OS) of the DB instance. Enhanced Monitoring enables all the system metrics and process information for the RDS DB instances on the console.
    * **Deprecated cores properties:** The `cores` property is now deprecated and and optional. It is recommended to use the `instance_class` property instead when creating new plans.
    * **Exposed Automated Backups:** Automated backups can now be scheduled through `backup_window`. By default, the automated backups are disabled. This feature can be customised through the following properties: `delete_automated_backups` - delete backups when deleting the instance, defaults to true; `copy_tags_to_snapshot` - copy all instance tags to snapshots, defaults to true. 
    * **Enable encryption with a custom key:** Amazon RDS Postgres by default uses an AWS KMS key to encrypt data at rest, and now a custom key with the desired configuration can be used.
    * **Exposed Performance Insights:** Performance Insights can now be enabled and a KSM key can be provided to encrypt the performance insights data. Performance insights is disabled by default.
    * **Exposed Storage Type:** The storage type can now be defined through the property `storage_type`. In addition to this, if using the provisioned IOPS SSD (io1) storage type, then the IOPS value can also be defined through the property `iops`.
    * **Blocked update opration for db_name property:** Previously updating this field would have led to data loss as a new database would be created on update.
    * **Removed Subsume functionality:** Subsume functionality has been removed from the RDS PostgreSQL offering. The previously available plan and associated properties have been removed due to the functionality not working. See [RDS Postgres migration guide](aws-postgres-migration.html.md.erb) for more details on how to migrate from the legacy broker to <%= vars.product_full %>
* **Amazon Aurora PostgreSQL Beta service offering:** An experimental foundation has been added for development and test purposes only. 
* **Amazon Aurora MySQL Beta service offering:** An experimental foundation has been added for development and test purposes only.
* **Beta service offerings:** All service offerings other then S3 and RDS Postgres are tagged as beta and will not be displayed by default in the marketplace. We do not recommend production usage of those service offerings. Select `Enable Beta service offerings` in the new Feature Flags panel to enable them all.
* **Terraform version update:** Terraform is now v1.1.9. All previous instances should be upgraded to this version. Upgrades are only supported for Terraform v0.12.0 and later.
* **New upgrade-all-instances task:** The operator can choose if they want to upgrade all instances to the latest version of the brokerpak while deploying the broker. 
By default all instances are upgraded. Update, bind, unbind, and delete operations on an instance are blocked if an upgrade is available and has not been applied yet.
* **Flexible region property:** Previously, the brokerpak specified regions that can be used with each service and, as the supported regions in the IaaS changed, a tile upgrade was required to enable those. As of this version, any supported IaaS region for the specific service works.
* **CSB database TLS config:** Users are allowed to configure the TLS skip-verify option when using custom certificates.
* **Improved Apps Manager service offering metadata:** 
    * Documentation url in Apps Manager now links to Tanzu docs. 
    * The name of each offering now includes the "CSB" prefix to differentiate services from other broker's offerings.

### Resolved Issues

This release has the following fixes:

<%= partial '/csb/logo-resolved' %>
* **Data loss prevention:** Added additional checks to prevent service instance recreation during an update.
* **Valid PostgreSQL JDBC URL SSL parameter:** By default, RDS for PostgreSQL uses and expects all clients to connect using SSL/TLS, therefore the value of SSL parameter in the PostgreSQL JDBC URL is always set to true. The `require_ssl` property can be used to enforce only SSL/TLS connections.
* **PostgreSQL binding users are correctly cleaned up:** Postgres users are now being completely deleted during unbind. 
* **Correct image in Apps Manager:** The image for the tile will now appear in all service offerings in the AppsManager UI.
* **Blocked update opration for region property:** The modification of region property for all service offerings is disabled. The update would generate the same service without eliminating the existing one in the newly established region.
* **Enforced minimum storage_gb constraints on RDS MySQL and RDS PostgreSQL** 
* **RDS PostgreSQL default maintenance window can be set easier:** Maintenance window can now be set to to null to allow AWS to pick a default window.

### Known Issues

This release has the following issue:

* **S3 bucket service instance update:** If you attempt to disable versioning for an instance created before upgrading to this version, it is recorded as an `update succeeded` operation at the first attempt. However this value is not updated in the broker or in AWS because disabling versioning is not supported in the IaaS. Subsequent attempts cause an error message that states that versioning can't be disabled as expected.

## <a id="view"></a> View release notes for another version

To view the release notes for another product version, select the version from drop-down menu at the
top of this page.
