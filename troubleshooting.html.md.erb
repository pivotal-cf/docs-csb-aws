---
title: Troubleshooting Cloud Service Broker for AWS
owner: Cloud Service Broker
---

<strong><%= modified_date %></strong>
This topic lists troubleshooting information for <%= vars.product_full %>.

## <a id="troubleshoot-errors"></a> Troubleshoot errors

Start here if you have a specific error or error messages.

### <a id="common-services-errors"></a> Common Services Errors

The following errors can occur in multiple services:

<ul>
    <li>
        <a href="#recreate-instance-update-operation">Broker trying to recreate the instance when updating it</a>
    </li>
    <li>
        <a href="#recreate-instance-plan-change">Broker trying to recreate the instance when changing plan</a>
    </li>
</ul>

<div id="recreate-instance-update-operation" class="wrap-table-overflow">
    <table class="table">
        <tbody>
             <tr>
                <td>Error</td>
                <td>Broker trying to recreate the instance when updating it</td>
             </tr>
             <tr>
                <td>Operation</td>
                <td>update</td>
             </tr>
             <tr>
                <td>Symptom</td>
                <td>The instance status is <code>update failed</code> and the message is similar to<br>
                <code>update failed: Error: Instance cannot be destroyed on main.tf **** has
                lifecycle.prevent_destroy set, but the plan calls for this resource to be destroyed</code>.</td>
            </tr>
            <tr>
                <td>Cause</td>
                <td>The update request for a field is failing because one of the following is true:
                <ul>
                <li>The field cannot be updated</li>
                <li>The new value for a property, or combination of properties, would cause an instance recreation</li>
                </ul>
                The failing update request might be an indication of an out-of-band update performed
                on the instance.
                </td>
            </tr>
             <tr>
                <td>Examples</td>
                <td>An out-of-band upgrade of the Redis version to a newer major version causes the
                broker to try to downgrade to the previous version, which causes instance recreation.
                </td>
            </tr>
            <tr>
                <td>Solution</td>
                <td>
                    <ul>
                        <li>If the property can be updated, pass the parameter in the update
                        request to match the IaaS configuration.</li>
                        <li>If the property can be updated, but specified in the instance plan, then
                        possible solutions include:<br>
                            <ul>
                                <li>Rolling back the change in the IaaS</li>
                                <li>Changing the value in the instance plan</li>
                            </ul>
                        </li>
                    </ul>
                </td>
            </tr>
        </tbody>
    </table>
</div>

<div id="recreate-instance-plan-change" class="wrap-table-overflow">
    <table class="table">
        <tbody>
             <tr>
                <td>Error</td>
                <td>Broker trying to recreate the instance when changing plan</td>
             </tr>
             <tr>
                <td>Operation</td>
                <td>update plan</td>
             </tr>
             <tr>
                <td>Symptom</td>
                <td>The instance status is <code>update failed</code> and the message is similar to<br>
                <code>update failed: Error: Instance cannot be destroyed on main.tf **** has
                lifecycle.prevent_destroy set, but the plan calls for this resource to be destroyed</code>.</td>
            </tr>
            <tr>
                <td>Cause</td>
                <td>
                    The update request for the plan is failing because the new plan contains
                    incompatible property values.
                </td>
            </tr>
             <tr>
                <td>Examples</td>
                <td>
                    Execute the plan update operation for Redis by setting a version of Redis earlier
                    than the previously created instance.
                    The downgrade of the version is not allowed because it involves the recreation of
                    the instance.
                </td>
            </tr>
            <tr>
                <td>Solution</td>
                <td>
                    Update the instance to a plan with the compatible values.
                </td>
            </tr>
        </tbody>
    </table>
</div>

### <a id="redis-errors"></a> Amazon ElastiCache for Redis Errors

The following errors can occur in Amazon ElastiCache for Redis:

<div id="redis-invalid-paramteter-group" class="wrap-table-overflow">
    <table class="table">
        <tbody>
             <tr>
                <td>Error</td>
                <td>Invalid Parameter Group</td>
             </tr>
             <tr>
                <td>Operation</td>
                <td>create or update</td>
             </tr>
             <tr>
                <td>Symptom</td>
                <td>
                  Errors containing:
                  <ul>
                  <li><code>InvalidParameterCombination</code></li>
                  <li><code>InvalidParameterValue</code></li>
                  </ul>
                </td>
            </tr>
            <tr>
                <td>Cause</td>
                <td>
                  The value of <code>parameter_group_name</code> points to a parameter group that is
                  not compatible with the version of Redis specified in <code>redis_version</code>.
                </td>
            </tr>
            <tr>
                <td>Solution</td>
                <td>
                    <ul>
                    <li>Set the <code>parameter_group_name</code> to <code>""</code> so that the default is used.</li>
                    <li>Set the <code>parameter_group_name</code> to a parameter group whose family matches the Redis version.</li>
                    </ul>
                </td>
            </tr>
        </tbody>
    </table>
</div>

<div id="redis-scale-nodes-snapshotting" class="wrap-table-overflow">
    <table class="table">
        <tbody>
             <tr>
                <td>Error</td>
                <td>Snapshotting state while adding or removing nodes</td>
             </tr>
             <tr>
                <td>Operation</td>
                <td>update</td>
             </tr>
             <tr>
                <td>Symptom</td>
                <td>
                  Errors containing:<br>
                  <code>unexpected state 'snapshotting', wanted target 'available'.</code>
                </td>
            </tr>
            <tr>
                <td>Cause</td>
                <td>
                  An AWS snapshot was started during the operation.
                </td>
            </tr>
            <tr>
                <td>Solution</td>
                <td>
                  Retry the operation.
                </td>
            </tr>
        </tbody>
    </table>
</div>

<div id="redis-mdl-not-installed" class="wrap-table-overflow">
    <table class="table">
        <tbody>
             <tr>
                <td>Error</td>
                <td>Unbind or upgrade consistently fails</td>
             </tr>
             <tr>
                <td>Operation</td>
                <td>update</td>
             </tr>
             <tr>
                <td>Symptom</td>
                <td>
                  Errors containing:<br>
                  <code>unexpected state 'Error: Module not installed'</code>
                </td>
            </tr>
            <tr>
                <td>Cause</td>
                <td>
                  Misconfiguration on the tile causes the service offering to be incompatible with the
                  Terraform version installed for this broker.
                </td>
            </tr>
            <tr>
                <td>Solution</td>
                <td>
                    <ol>
                    <li>From the CLI, target the organization and space where the broker application is deployed by running <code>cf t -o system -s cloud-service-broker-space</code>.</li>
                    <li>Locate the app by running <code>cf apps</code> to ensure that you are in the right place. The app is named <code>cloud-service-broker-aws-1.5.1</code>.</li>
                    <li>Edit the environment variable for the app by running <code>cf set-env cloud-service-broker-aws-1.5.1 CSB_DISABLE_TF_UPGRADE_PROVIDER_RENAMES true</code>.</li>
                    <li>As advised by the CLI, restage the app by running <code>cf restage cloud-service-broker-aws-1.5.1</code>.</li>
                    <li>Run the operation again and verify that it works. Applying changes from <%= vars.ops_manager %> does not overwrite this change.</li>
                    </ol>
                    <br><br>
                    If you have instances of Redis created with previous versions of the broker, try
                    upgrading again because the earlier upgrade attempt might have failed when
                    installing the tile.<br>
                    You can apply changes again from <%= vars.ops_manager %>.
                    For more information, see
                    <a href="installing-with-aws.html.md.erb#upgrade-all-config">Upgrade All Service Instances Config</a>.<br>
                    Alternatively, you can run the <code>upgrade-all-services</code> CLI plug-in from the CLI.
                    For more information, see the <a href="https://plugins.cloudfoundry.org/#UpgradeAllServices">Cloud Foundry documentation.</a>
                </td>
            </tr>
        </tbody>
    </table>
</div>